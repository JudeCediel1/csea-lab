% getcon_ssvepfaces% searches condnumberes in *dat file generated by ssvepfaces filefunction [alltrialresmat] = getcon_ABfaces(filepath);facevec1 = []; facevec2 = []; conditionvec= []; correct_1_vec = []; correct_2_vec = []; fid = fopen(filepath);a = 1;	 while a > 0	a = fgetl(fid); 	index1 = findstr(a, ' A');    index2 = findstr(a, '.J'); 		    if ~isempty (index1);		% extract the cndition        conditionvec = [conditionvec; str2num(a(index1(1)-1))];                % extract the first face - what expression was it?        faceletters1 = deblank(a(index1(1)+5:index1(1)+6));                   if strcmp(faceletters1, 'HA'), facevec1 = [facevec1; 1];            elseif strcmp(faceletters1, 'NE'), facevec1 = [facevec1; 2];            elseif strcmp(faceletters1, 'AF'), facevec1 = [facevec1; 3] ;            elseif strcmp(faceletters1, 'AN'), facevec1 = [facevec1; 4] ;             end        % extract the second face - what expression was it?        faceletters2 = deblank(a(index1(2)+5:index1(2)+6));                        if strcmp(faceletters2, 'HA'), facevec2 = [facevec2; 1];            elseif strcmp(faceletters2, 'NE'), facevec2 = [facevec2; 2];            elseif strcmp(faceletters2, 'AF'), facevec2 = [facevec2; 3];               elseif strcmp(faceletters2, 'AN'), facevec2 = [facevec2; 4];              end                        % the following is used for determining accuracy only,            % intermediate results are not kept, just the accuracy                                     % RESPONSE of the subject: extract the four x coordinates of the response                    % direction of first                     resp_vec_1 = str2num(a(index1(2)-7:index1(2)-1));                    resp_vec_2 = str2num(a(index1(2)+14:index1(2)+20));                	% convert the x coordinates of the response                    % into response LABELS                    if resp_vec_1(1)<414, direction1 = 'L';                     elseif resp_vec_1(1)>414 && resp_vec_1(1)<515, direction1 = 'R';                     elseif resp_vec_1(1)>515 && resp_vec_1(1)<615, direction1 = 'S';                     else direction1 = '?';                     end                                        if resp_vec_1(2)<430, gender1 = 'F';                     elseif resp_vec_1(2)>430 && resp_vec_1(2)<565, gender1 = 'M';                     else gender1 = '?';                     end                                        if resp_vec_2(1)<414, direction2 = 'L';                     elseif resp_vec_2(1)>414 && resp_vec_2(1)<515, direction2 = 'R';                     elseif resp_vec_2(1)>515 && resp_vec_2(1)<615, direction2 = 'S';                     else direction2 = '?';                     end                                        if resp_vec_2(2)<430, gender2 = 'F';                     elseif resp_vec_2(2)>430 && resp_vec_2(2)<565, gender2 = 'M';                     else gender2 = '?';                     end                 % determine orientation/direction of the face and match with response                 % direction of first and second face                 realdirection_1 = (a(index2(1)-1));                  realdirection_2 = (a(index2(2)-1));                  % gender of first and second face                 realgender_1 =  (a(index1(1)+2));                  realgender_2 = (a(index1(2)+2));                                    if gender1 == realgender_1 && direction1 == realdirection_1, ...                       correct_1_vec  = [correct_1_vec; 1], else correct_1_vec  = [correct_1_vec; 0], end                              if gender2 == realgender_2 && direction2 == realdirection_2, ...                       correct_2_vec  = [correct_2_vec; 1], else correct_2_vec  = [correct_2_vec; 0], end                                         end % if isempty       end  alltrialresmat = [conditionvec facevec1 facevec2 correct_1_vec correct_2_vec]  % take info from matrix and calculate fclose('all');eval(['save ' filepath '.stat conditionvec -ascii'])