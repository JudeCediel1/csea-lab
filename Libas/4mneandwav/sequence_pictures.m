% Liest Liste von separaten Bitmaps (format = 'bmp') ein, fügt diese in rechteckiger% Anordnung zu einem Bitmap zusammen% Nützlich etwa wenn viele Bilder eines Experiments übersichtlich auf einer Seite% dargestellt werden sollenfunction [newmatrix, picmat, map, paths, names] = sequence_pictures(paths, names, format, outname);if nargin==0,   disp(' [newmatrix, picmat, map, paths, names] = sequence_pictures(paths, names, format, outname); ');   return;end;if isempty(names),							% Ggfls. interaktive Erstellung der Fileliste  	ending = sprintf('*.%s', format);   [namelist, names, paths] = read_filelist(ending);   nr_names = length(namelist(:,1));else   nr_names = length(names(:,1));   for i=1:nr_names,      namelist(i,1:length(deblank(names(i,:)))+length(deblank(paths(i,:)))) = sprintf('%s%s', deblank(paths(i,:)), deblank(names(i,:)));   end;end;for i=1:nr_names,						% Einlesen der separaten Bitmaps   [tmpmat, tmpmap] = imread(namelist(i,:));   [m(i) n(i)] = size(tmpmat);   [mm(i) nm(i)] = size(tmpmap);   [picmat(1:m(i),1:n(i),i), map(1:mm(i),1:nm(i),i)] = imread(namelist(i,:));end;size(picmat)size(map)s = sqrt(nr_names);					% Bestimmung der Rechteckanordung für Gesamtbildif round(s)==s	plotrows = round(s);	plotcols = round(s);else	for i=1:ceil(s),		if i*ceil(s)>=nr_names,			plotrows = ceil(s);			plotcols = i;			break; 		end;	end;end;mmax = max(m);nmax = max(n);newmatrix = zeros(plotrows*mmax, plotcols*nmax);size(newmatrix)cnt = 1;offsetrow = 1;offsetcol = 1;for i=1:plotrows,								% Erstellung des Gesamtbilds   for j=1:plotcols,      if cnt>nr_names, break; end;      newmatrix(offsetrow:offsetrow+m(cnt)-1, offsetcol:offsetcol+n(cnt)-1) = picmat(1:m(cnt), 1:n(cnt), cnt);      offsetcol = offsetcol+nmax;      cnt = cnt+1;   end;   if cnt>nr_names, break; end;   offsetrow = offsetrow+mmax;   offsetcol = 1;end;if ~isempty(outname), 						% Ausgabe des Gesamtbildes	disp(outname);	imwrite(newmatrix, map(1:mm(1),1:nm(1),1), outname); end;   