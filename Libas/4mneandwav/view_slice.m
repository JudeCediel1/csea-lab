% View a slice for which x-y-coordinates and a z-values are given (the z-values will be colourcoded)% x-y-coordinates must be regularly spaced, but the range may be different for x and y% x and y must be given as xy(1,:) and xy(2,:), resp., but do not have to ordered% v must have the same lenght as xy(1,:) and xy(2,:)% col_from, col_to are optional and specify the colourrange for the plot (e.g. important if view_slice is called from view_slices)% The values in the plot will not be interpolated% OH 30.10.97function view_slice(xy, v, col_from, col_to);tol = 1.0e-6;   	% Tolerance for grid locationsif length(v)~=length(xy(1,:)),	disp(' Lengths of coordinate vector and solution vector do not match!!! (view_slice) ');	return;end;xmin = min(xy(1,:));xmax = max(xy(1,:));ymin = min(xy(2,:));ymax = max(xy(2,:));q = 0;				% Decide in which dimension to look for the grid distance (1 or 2?)if (ymin==ymax)&(xmin==xmax),	% Only one element in slice, distance meaningless	distance = 1;	q = -1;elseif (xmin==xmax),	q = 1;elseif (ymin==ymax),	q = 2;end;if q==0	if xmax-xmin>=ymax-ymin,		q = 2;	else		q = 1;	end;end;if q~=-1,	cnt = 1;	for i = 2:min(length(xy(q,:)),10),			% Find grid distance		d = abs(xy(q,i)-xy(q,i-1));		if d>tol,			distvec(cnt)=d;			cnt = cnt+1;		end;	end;	distance = min(distvec);end;m = round((ymax-ymin)/distance) + 1;n = round((xmax-xmin)/distance) + 1;A(1:m+1,1:n+1) = inf;				% Initializing matrix with non-valuesfor i=1:length(xy(1,:));			% Assigning z-values on matrix	ix = round((xy(1,i)-xmin)/distance)+1;	iy = round((xy(2,i)-ymin)/distance)+1;	A(iy,ix) = v(i);end;for i=1:m+1,						% Assigning 0 at the end of row	for j=n+1:-1:1,		if A(i,j)~=inf,			A(i,j+1)=0.0;			break;		end;	end;end;for i=1:n+1,						% Assigning 0 at the end of a column	for j=m+1:-1:1,		if A(j,i)~=inf,			A(j+1,i)=0.0;			break;		end;	end;end;tix = xmin-distance/2:distance:xmax+distance/2+distance/100;tiy = ymin-distance/2:distance:ymax+distance/2+distance/100;surf(tix, tiy, A);if (nargin==4)			% If colourrange was specified	caxis([col_from, col_to]);end;axis([xmin-distance/2 xmax+distance/2 ymin-distance/2 ymax+distance/2]);view([0 0 1]);