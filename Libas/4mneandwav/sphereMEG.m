% Forward calculation for MEG (homogenous sphere)% r: Sensor position (x,y,z)% u: Sensor orientation (nx, ny, nz)% d: Dipole location (x,y,z)% => lead(1,2,3): Components of leadfieldfunction lead = sphere_meg( r, u, d );FACT = 1.0;l = [2 3 1 2];      lead(1)= 0.0;lead(2)= 0.0;lead(3)= 0.0;rd(1)= r(1) - d(1);rd(2)= r(2) - d(2);rd(3)= r(3) - d(3);% rb= r(1)*r(1) + r(2)*r(2) + r(3)*r(3);rb = r'*r;% db= d(1)*d(1) + d(2)*d(2) + d(3)*d(3);db = d'*d;rdb= rd(1)*rd(1) + rd(2)*rd(2) + rd(3)*rd(3);if( rb==0.0 | rdb==0.0 )   return;end;rb= sqrt( rb );rdb= sqrt( rdb );if( db~= 0.0 )	db= sqrt( db );end;   % alpha= -1.0 / rdb / ( rb*rdb + r(1)*rd(1)+r(2)*rd(2)+r(3)*rd(3) );alpha= -1.0 / (rdb * ( rb*rdb + r(1)*rd(1)+r(2)*rd(2)+r(3)*rd(3)) );a= 1.0/rdb - 2.0*alpha*db*db - 1.0/rb;b= 2.0 * alpha * ( r(1)*d(1)+r(2)*d(2)+r(3)*d(3) );% c= -1.0 / ( rdb*rdb*rdb ) * ( rd(1)*d(1)+rd(2)*d(2)+rd(3)*d(3) );c= -1.0 / ( rdb*rdb*rdb ) * ( rd(1)*d(1)+rd(2)*d(2)+rd(3)*d(3) );beta = a * ( r(1)*u(1)+r(2)*u(2)+r(3)*u(3) );beta= beta + b * ( d(1)*u(1)+d(2)*u(2)+d(3)*u(3) );beta= beta + c * ( rd(1)*u(1)+rd(2)*u(2)+rd(3)*u(3) );rds = r'*d;% rds= r(1)*d(1) + r(2)*d(2) + r(3)*d(3);c= rb*rb * db*db - rds*rds;if( c< 1.0e-10 )	beta= 0.0;else   beta= beta/c;end;for i=1:3,      a= u( l(i) ) * d( l(i+1) ) - u( l(i+1) ) * d( l(i) );   b= r( l(i) ) * d( l(i+1) ) - r( l(i+1) ) * d( l(i) );   lead(i)= FACT * ( alpha * a + beta * b );end;return;