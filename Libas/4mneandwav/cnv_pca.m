% Compute correlation of columns of matrices from different files with first principle component of columns of matrix from first file in namelist% namelist contains the filenames with matrices, pathname the path where all these files are stored, elplist contains electrodes to be excluded% (e.g. virtual eye electrodes!)% OH 07.11.97function [data, correl, meancor, pcc, paths, names] = cnv_pca(paths, names, format, elplist, pathout, nameout, chars);if nargin==0,   disp(' [data, correl, meancor, pcc, paths, names] = cnv_pca(paths, names, format, elplist, pathout, nameout, chars); ');   return;end;if isempty(names),   if strcmp(format, 'avr'), ending = '*.avr'; end;	if strcmp(format, 'mfxtxt'), ending = '*.asc'; end;   [namelist, names, paths] = read_filelist(ending);   nr_names = length(namelist(:,1));else   nr_names = length(names(:,1));   for i=1:nr_names,      namelist(i,1:length(deblank(names(i,:)))+length(deblank(paths(i,:)))) = sprintf('%s%s', deblank(paths(i,:)), deblank(names(i,:)));   end;end;namelist[data, m, n, latencies] = read_data(namelist, elplist, format);colours = char('r', 'b', 'g', 'm', 'c', 'y', 'b', 'w');if nr_names>length(colours),	disp('Not enough colours for all files! (cnv_pca)');end;disp(' Normalizing columns ');norm_data = normalize(data(:,1:n(1),1));disp('Compute principal components of normalized first data file');[pcc pcr] = princ_comp(norm_data);disp('Computing correlations');for i=1:nr_names,	correl(1:n(i),i) = correl_mat(data(:,1:n(i),i)', pcc');end;disp('Computing mean correlations');for i=1:nr_names,	meancor(i) = mean(correl(1:n(i),i));end;disp('Plotting');clf;for i=1:nr_names,	if i<length(colours),		c = sprintf('%so', colours(i));	else		c = 'bo';	end;	plot(0, meancor(i), c); hold on;end;legend(names(:,1:chars), -1);  hold on;for i=1:nr_names,   for j=1:n(i),		if i<length(colours),			c = sprintf('%so', colours(i));		else			c = 'bo';		end;      plot(i, correl(j,i), c); hold on;   end;end;plot(i+1, 0);xlabel('Gruppe');ylabel('Korrelation');title('Korrelation mit der ersten Hauptkomponente');if ~isempty(pathout) & ~isempty(nameout),   filename = sprintf('%s\\%s', pathout, nameout);   write_matrix(correl, filename);end;%disp('Printing to file');%print -deps MadMac:matlab:data:aphasie:pictures:correl_pcacnv.eps;