% Plot several data sets in subplot matrix, possibly more than one curve in each subplot% data: Rows contain curves to be plotted% nrs_points: Number of valid elements of one specific row of data to be plotted (maybe left empty)% labels: Subplot cell in which a row of data shall be plotted% xvalues: For each row of data, values against which curves shall be plotted (maybe left empty)% legends: legend entries for subplots (maybe left empty)% xtext, ytext: Description for x-axis and y-axis% norm_flag: Specifies whether all plots shall have the same scaling ('normmax') or notfunction plot_a_lot(data, nrs_points, labels, xvalues, legends, titles, xtext, ytext, norm_flag);if nargin==0,   disp(' plot_a_lot(data, nrs_points, labels, xvalues, legends, titles, xtext, ytext, norm_flag); ');   return;end;nr_files = length(labels);% Find number of different entries in label (=number of subplots)nr_plots = max(labels);% Define sequence of colourscolours = char('r', 'b', 'g', 'm', 'c', 'y', 'b', 'w');% Setting some defaultsif isempty(nrs_points),   for i=1:nr_files,      nrs_points(i)=length(data(i,:));   end;end;if isempty(xvalues),	for i=1:nr_files,      xvalues(i,1:length(data(i,:)))=1:length(data(i,:));   end;end;% Find appropriate dimensions for the subplot matrixs = sqrt(nr_plots);	if round(s)==s	plotrows = round(s);	plotcols = round(s);else	for i=1:ceil(s),		if i*ceil(s)>=nr_plots,			plotrows = ceil(s);			plotcols = i;			break; 		end;  	end;end;figure;for i=1:nr_plots,   % Find data sets to plot in the actual subplot   cnt=1;   for j=1:nr_files,       if labels(j)==i,         datasets(cnt)=j;         cnt = cnt+1;      end;   end;   if length(datasets)>length(colours),		disp('Not enough colours for all files! ');	end;   for j=1:length(datasets),      handle = subplot(plotrows, plotcols, i); hold on;      if ~isempty(xtext), xlabel(xtext); end;      if ~isempty(ytext), ylabel(ytext); end;		if j<length(colours),			col = colours(j);		else			col = 'b';      end;      actualset = datasets(j);      plot(xvalues(1,1:nrs_points(actualset)), data(actualset,1:nrs_points(actualset)), col); hold on;        if ~isempty(norm_flag),         if strcmp(norm_flag, 'normmax'),            set(handle, 'ytick', [0:10:max(max(data))]);            maxx = max(max(xvalues(datasets,:)));            minx = min(min(xvalues(datasets,:)));            set(handle, 'xtick', [-300 0 500 1000 1500]);            size(xvalues(datasets,:));            size(data);            axis([minx  maxx  0  max(max(data))]);            grid on;         elseif strcmp(norm_flag, 'normminmax'),            set(handle, 'ytick', [min(min(data)):10:max(max(data))]);            maxx = max(max(xvalues(datasets,:)));            minx = min(min(xvalues(datasets,:)));            set(handle, 'xtick', [-300 0 500 1000 1500]);            size(xvalues(datasets,:));            size(data);            axis([minx  maxx  min(min(data))  max(max(data))]);            grid on;         else            maxampl = str2num(norm_flag);            maxx = max(max(xvalues(datasets,:)));            minx = min(min(xvalues(datasets,:)));            set(handle, 'ytick', [0:10:maxampl]);            set(handle, 'xtick', [minx:300:maxx]);            axis([ minx  maxx  0  maxampl ]);            grid on;         end;   	end;   end;   if ~isempty(legends), legend(legends(datasets,:), 1); end;   if ~isempty(titles), title(titles(i,:)); end;end;