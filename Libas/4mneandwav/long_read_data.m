function [data, m, n, latencies] = long_read_data(namelist, elplist, format, from, to);if nargin==0,   disp(' [data, m, n, latencies] = long_read_data(namelist, elplist, format, from, to); ');   return;end;nr_names = length(namelist(:,1));%disp(namelist(1,:));if strcmp(format, 'mavr') | strcmp(format, 'avrnoref'), [matrix, latency] = long_read_avr(deblank(namelist(1,:))); end;[m(1) n(1)] = size(matrix);if (nargin>3),			% If from or to specified...   if isempty(from), from_elem=1; else, [tmp, from_elem] = min(abs(latency-from)); end;   if isempty(to), to_elem=n(1); else, [tmp, to_elem] = min(abs(latency-to)); end;   matrix=matrix(:,from_elem:to_elem);   [m(1) n(1)] = size(matrix);   latencies(1,1:n(1)) = latency(from_elem:to_elem);else,   latencies(1,1:n(1)) = latency;end;[m(1) n(1)] = size(matrix);data(1:m(1),1:n(1),1) =  matrix;disp(' All electrodes included in the following procedure ');text = sprintf('%d %d', m(1), n(1));disp(text);clear matrix;