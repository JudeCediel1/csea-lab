function [data, values, paths, names] = lat_bat(paths, names, format, pairs, from, to, norm_flag, nameout, chars);if nargin==0,   disp(' [data, values, paths, names] = lat_bat(paths, names, format, pairs, from, to, norm_flag, nameout, chars); ');   return;end;if isempty(names),   if strcmp(format, 'avr'), ending = '*.avr'; end;	if strcmp(format, 'mfxtxt'), ending = '*.asc'; end;   [namelist, names, paths] = read_filelist(ending);   nr_names = length(namelist(:,1));else   nr_names = length(names(:,1));   for i=1:nr_names,      namelist(i,1:length(names(i,:))+length(paths(i,:))) = sprintf('%s%s', paths(i,:), names(i,:));   end;end;namelist[data, m, n, latencies] = read_data(namelist, '', format);for i=1:nr_names,	if isempty(from), fromind(i)=1; else, fromind(i) = from; end;   if isempty(to), toind(i)=n(i); else, toind(i) = to; end;end;colours = char('r', 'b', 'g', 'm', 'c', 'y', 'b', 'w');if nr_names>length(colours),	disp('Not enough colours for all files! (lat_bat)');end;for i=1:nr_names,   disp(norm_flag);   values(1:toind(i)-fromind(i)+1,i) = differences(data(1:m(i),fromind(i):toind(i),i), pairs, norm_flag, '');end;meanvalues = mean(values)if ~isempty(nameout),   write_matrix(values, nameout);end;figure(gcf+1);clf;for i=1:nr_names,	if i<length(colours),      c = colours(i);	else      c = 'b';   end;   plot(latencies(1,fromind(i):toind(i)), values(1:toind(i)-fromind(i)+1,i), c); hold on;end;legend(names(:,1:chars), 1);  hold on;for i=1:nr_names,	if i<length(colours),      c = sprintf('%co', colours(i));	else      c = 'bo';	end;   plot(latencies(1,fromind(1)), meanvalues(i), c); hold on;end;axis([latencies(1,min(fromind))  latencies(1,max(toind))  min(min(values))  max(max(values))]);plot([latencies(1,min(fromind))  latencies(1,max(toind))], [0 0], 'k');xlabel('Latency');ylabel('Symmetry measure');title(norm_flag);