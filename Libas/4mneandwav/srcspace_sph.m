% Create sourcespace (dipole locations) in a sphere% Locations are equally spaced by distance% Sphere radius is "radius" (surprise, surprise!)% Locations with z<cut_bottom are excluded (default: -radius)% OH 23.10.97function [diploc] = srcspace_sph(outerradius, radstep, distance, cut_bottom);if nargin==0,   disp(' [diploc] = srcspace_sph(outerradius, radstep, distance, cut_bottom); ');   return;end;if nargin == 3	cut_bottom = -outerradius;end; cnt = 1;for radius = outerradius:-radstep:(radstep/100),	quot = cut_bottom/radius;	if quot<1,		if quot<=-1,			outertheta = pi;		else			angle = acos(abs(cut_bottom)/radius);			if cut_bottom>=0,				outertheta=angle;			else				outertheta = pi-angle;			end;		end;		thetastep = distance/radius;		for theta = 0:thetastep:outertheta,			if theta==0 | theta==pi,				diploc(1,cnt) = 0;				diploc(2,cnt) = 0;				diploc(3,cnt) = radius*sign(1-theta);				cnt = cnt+1;			else				rxy = radius*sin(theta);            phistep = distance/rxy;            rest = mod(2*pi*rxy,distance);            nr = floor(2*pi*rxy/distance);            if nr==1, nr = 2; end;            phistep = phistep+rest/(rxy*(nr-1));				for phi = 0:phistep:2*pi-phistep/5,  % phistep/5 avoids too nearly spaced locations at the beginning/end of one circle					diploc(1,cnt) = rxy*cos(phi);					diploc(2,cnt) = rxy*sin(phi);					diploc(3,cnt) = radius*cos(theta);					cnt = cnt+1;					end;   % for phi			end; %  else		end;    % for theta	end; % if quotend;   % for radius[q, r] = when_changes_radius(diploc(1:3,:), 0.001);elem = 1;for j=1:length(q),   if j==length(q),     	volume = (4.0/3.0)*pi*(r(j)^3)/(q(j)-q(j-1));     	v(elem:q(j)) = volume;   elseif j==1,     	volume = (4.0/3.0)*pi*(r(1)^3-r(2)^3)/q(1);     	v(1:q(1)) = volume;     	elem = q(1)+1;	else	  	volume = (4.0/3.0)*pi*(r(j)^3-r(j+1)^3)/(q(j)-q(j-1));             	v(elem:q(j)) = volume;     	elem = q(j)+1;   end;end;if length(diploc(1,:))~=length(v),   disp(' Number of volume elements and number of locations do not match !!! (srcspace_sph) ');   return;end;diploc(4,:) = v;