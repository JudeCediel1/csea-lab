function [half_angle, nr_halfelem, data, paths, names] = half_width_avr(paths, names, format, nameout, elplist, locations, tol);if nargin==0,   disp(' [half_angle, nr_halfelem, data, paths, names] = half_width_avr(paths, names, format, nameout, elplist, locations, tol); ');   return;end;chars = '';  	% Number of characters from input filename to be used as output filename, default ('') = all without extension   if isempty(names),   if strcmp(format, 'avr')|strcmp(format, 'avrnoref'), ending = '*.avr'; end;	if strcmp(format, 'mfxtxt'), ending = '*.asc'; end;   [namelist, names, paths] = read_filelist(ending);   nr_names = length(namelist(:,1));else   nr_names = length(names(:,1));   for i=1:nr_names,      namelist(i,1:length(deblank(names(i,:)))+length(deblank(paths(i,:)))) = sprintf('%s%s', deblank(paths(i,:)), deblank(names(i,:)));   end;end;namelist[data, m, n, latencies] = read_data(namelist, elplist, format);nr_electrodes = m(1);text = sprintf('Number of electrodes to be included in the following procedure: %d', nr_electrodes);disp(text);for i=1:nr_names,   for j=1:n(i),      [half_angle(j,i), nr_halfelem(j,i)] = half_width(data(1:m(i),j,i), locations, tol);   end;end;if ~isempty(nameout),   write_matrix(half_angle, nameout);end;