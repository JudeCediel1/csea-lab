function [G, diagwgt] = wrop(lfdmat, gridloc, solloc, forward, dim, alpha, beta, lambda);if nargin==0,   disp(' G = wrop(lfdmat, gridloc, solloc, forward, dim, alpha, beta, lambda); ');   return;end;nr_gridpoints = length(gridloc(1,:));nr_solpoints = length(solloc(1,:));[m, n] = size(lfdmat);for i=1:nr_solpoints,				% For all solution points...   if mod(i,10)==0, disp(i); end;   diffvec(1,:) = gridloc(1,:) - solloc(1,i);   diffvec(2,:) = gridloc(2,:) - solloc(2,i);   diffvec(3,:) = gridloc(3,:) - solloc(3,i);   distances = norm_col(diffvec, 'squared');   if alpha~=0.0,   		for j=1:dim,					% For all components      		for k=1:dim,        	 	if j==k,	       		  diagwgt(k:dim:n) = distances + beta;         		else,          		  diagwgt(k:dim:n) = distances + beta + alpha;         		end;      		end; 		%k			   spreadmatrix = spread_matrix(lfdmat, diagwgt');	   		G((i-1)*dim+j,:) = ((spreadmatrix + lambda*eye(m))\forward(:,(i-1)*dim+j))';			end;   		% j	else,		for k=1:dim,          diagwgt(k:dim:n) = distances + beta;      end;		spreadmatrix = spread_matrix(lfdmat, diagwgt');		for j=1:dim,		   G((i-1)*dim+j,:) = ((spreadmatrix + lambda*eye(m))\forward(:,(i-1)*dim+j))';      end;	end;end;      