  function [data, correl, rmsvec, paths, names] = homog_curves(paths, names, format, elplist, from, to, mst_flag, norm_flag, nameout);if nargin==0,   disp(' [data, correl, rms, paths, names] = homog_curves(paths, names, format, elplist, from, to, mst_flag, norm_flag, nameout); ');   return;end;if isempty(names),   if strcmp(format, 'avr'), ending = '*.avr'; end;	if strcmp(format, 'mfxtxt'), ending = '*.asc'; end;   [namelist, names, paths] = read_filelist(ending);   nr_names = length(namelist(:,1));else   nr_names = length(names(:,1));   for i=1:nr_names,      namelist(i,1:length(deblank(names(i,:)))+length(deblank(paths(i,:)))) = sprintf('%s%s', deblank(paths(i,:)), deblank(names(i,:)));   end;end;namelist[data, m, n, latencies] = read_data(namelist, elplist, format, from, to);size(latencies)% Define labels and titles for subplotsnr_labels = 1;labels(1) = 1;xvalues(1,:) = latencies(1,:);nrs_points(1) = n(1);titles(1,:) = names(1,2:3);for i=2:nr_names,   if paths(i,:)==paths(i-1,:),      labels(i) = labels(i-1);   else,      nr_labels = nr_labels+1;      titles(nr_labels,:) = names(i,2:3);      labels(i) = labels(i-1)+1;      xvalues(nr_labels,:) = latencies(i,:);      nrs_points(nr_labels) = n(i);   end;end;size(xvalues)for i=1:nr_labels,   cnt = 1;		% Define actual data sets   for j=1:nr_names,      if labels(j)==i,         datasets(cnt)=j;         cnt = cnt+1;      end;   end;   for j=1:n(datasets(1)),      for k=1:cnt-1,         matrix(:,k) = data(:,j,datasets(k));      end;     	if strcmp(norm_flag, 'norm'), matrix = normalize(matrix); end;      ev = svd(matrix);      clear matrix;      values(i,j) = ev(1)^2/sum(ev.^2);   end;end;plot_a_lot(values, nrs_points, [1:nr_labels], xvalues, '', titles, '', 'Homogenity', '1');