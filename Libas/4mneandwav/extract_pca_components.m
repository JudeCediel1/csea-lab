function [components, weights] = extract_pca_components(name_in, name_out_stem, elplist, from, to, var_limit);if nargin==0,   disp(' [components, weights] = extract_pca_components(name_in, name_out_stem, elplist, from, to, var_limit); ');   return;end;[data, latencies] = read_avr(name_in);if ~isempty(elplist),   data = reduce_columns(elplist, data')';end;[m, n] = size(data);if ~isempty(from), [tmp, index_from] = min(abs(latencies-from)); else, index_from = 1; end;if ~isempty(to), [tmp, index_to] = min(abs(latencies-to)); else, index_to = n; end;[U, S, V] = svd(data(:,index_from:index_to));S = diag(S);clear V;ev_sum = sum(S.*S);for i=1:max(m,n),   if sum(S(1:i).*S(1:i))/ev_sum>var_limit,      max_elem = i;      break;   end;end;components = U(:,1:max_elem);weights = S(1:max_elem).*S(1:max_elem)/ev_sum;if ~isempty(name_out_stem),   name_out_comp = sprintf('%s.avr', name_out_stem);   name_out_weights = sprintf('%s.wgt', name_out_stem);   write_avr(components, name_out_comp, 1, 1);   write_matrix(weights, name_out_weights);end;