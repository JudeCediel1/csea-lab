#!/bin/csh cd /export/jesse/data3/ZAV/mndata/filt25354f#cd /home/btimap21/WR/MN/zippedfilesrm exp_mn*.tmp#set patient#set solution#set subpartforeach patient (ZAV0011 ZAV0021 ZAV0031 ZAV0041 ZAV0051 ZAV0071 ZAV0081 ZAV0091 ZAV0101 ZAV0111 ZAV0121 ZAV0131 ZAV0141 ZAV0151 ZAV0161 ZAV0171 ZAV0181)#foreach solution (mn1 mn2 mn3 mn4) foreach solution (mn2050NCS mn2050NC mn2050)   foreach subpart (f4ARM f4LEG f4FAC f4ANI)                echo unzip $patient\$subpart\_$solution.avr.gz        gzip -d $patient$subpart\_$solution.avr.gz        tail -197 $patient$subpart\_$solution.avr > exp_mn_avr.tmp 	        echo generate time frames	#cut out the relevant samples for the four time frames	#cut hat den fehler, in der erste zeile was falsches auszugeben, dh. dipol 1 nicht benutzen! 	# bla bla verwende mycut im ordner ~assadoll/myscripts, dann geht's!        #mycut -fexp_mn_avr.tmp -v153 -b142 exp_mn_avr.tmp > exp_mn_1.tmp	mycut -fexp_mn_avr.tmp -v188 -b214 exp_mn_avr.tmp > exp_mn_1.tmp	#mycut -fexp_mn_avr.tmp -v143 -b158 exp_mn_avr.tmp > exp_mn_3.tmp	#mycut -fexp_mn_avr.tmp -v168 -b189 exp_mn_avr.tmp > exp_mn_4.tmp	#mycut -fexp_mn_avr.tmp -v194 -b214 exp_mn_avr.tmp > exp_mn_5.tmp	#mycut -fexp_mn_avr.tmp -v219 -b276 exp_mn_avr.tmp > exp_mn_6.tmp	#mycut -fexp_mn_avr.tmp -v281 -b332 exp_mn_avr.tmp > exp_mn_7.tmp	rm exp_mn_avr.tmp        echo averages over time	#compute time average over the dipoles in each time frame	# so the resulting files contain one number per dipole	# fuer alle zeitscheiben machen        foreach timeframe (1)	# 2) 	 nawk '{l=l+1; if(l == 9 || l == 20 || l == 21 || l == 22 || l == 38 || l == 39) {d=0;z=0;for (i=1; i<(NF+1); i=i+1) {d = d+$(i); z = z + 1}; print d/z}}' exp_mn_$timeframe.tmp > exp_mn_foc1$timeframe.tmp 	 nawk '{l=l+1; if(l == 23 || l == 40 || l == 41 || l == 42 || l == 62 || l == 63) {d=0;z=0;for (i=1; i<(NF+1); i=i+1) {d = d+$(i); z = z + 1}; print d/z}}' exp_mn_$timeframe.tmp > exp_mn_foc2$timeframe.tmp 	 nawk '{l=l+1; if(l == 64 || l == 65 || l == 87 || l == 88 || l == 89 || l == 113) {d=0;z=0;for (i=1; i<(NF+1); i=i+1) {d = d+$(i); z = z + 1}; print d/z}}' exp_mn_$timeframe.tmp > exp_mn_foc3$timeframe.tmp 	 nawk '{l=l+1; if(l == 8 || l == 19 || l == 35 || l == 36 || l == 56 || l == 57) {d=0;z=0;for (i=1; i<(NF+1); i=i+1) {d = d+$(i); z = z + 1}; print d/z}}' exp_mn_$timeframe.tmp > exp_mn_foc4$timeframe.tmp 	 nawk '{l=l+1; if(l == 34 || l == 53 || l == 54 || l == 55 || l == 76 || l == 77) {d=0;z=0;for (i=1; i<(NF+1); i=i+1) {d = d+$(i); z = z + 1}; print d/z}}' exp_mn_$timeframe.tmp > exp_mn_foc5$timeframe.tmp 	 nawk '{l=l+1; if(l == 74 || l == 75 || l == 98 || l == 99 || l == 100 || l == 123) {d=0;z=0;for (i=1; i<(NF+1); i=i+1) {d = d+$(i); z = z + 1}; print d/z}}' exp_mn_$timeframe.tmp > exp_mn_foc6$timeframe.tmp	end        	echo averages over dipoles of a focus	# next step: average the dipoles of a focus, i. e. sum up the lines of the files from 	# above and divide by 6 because each focus has 6 dipoles in it.	set focus	set timeframe	foreach timeframe (1)	# 2)	 foreach focus (foc1 foc2 foc3 foc4 foc5 foc6)  	  awk '{i=i+$1*$1}END{printf sqrt(i/6) " "}' exp_mn_$focus$timeframe.tmp >> exp_mn_a_$timeframe\_$subpart.tmp	 end         printf "\n" >>  exp_mn_a_$timeframe\_$subpart.tmp	end    # echo zip file again    # gzip -6 $patient\_$subpart\_$solution.avr   end   # now all is done for the 4 classes      echo concat data for word classes   echo example for a file ANI   cat exp_mn_a_1_f4ANI.tmp   # concatenate data for word classes   foreach timeframe (1)# 2)    paste -d' ' exp_mn_a_$timeframe\_f4ANI.tmp exp_mn_a_$timeframe\_f4FAC.tmp exp_mn_a_$timeframe\_f4ARM.tmp exp_mn_a_$timeframe\_f4LEG.tmp > mn_wc_$patient\_$solution\_$timeframe.tmp2   end   # remove temporary data, important because some commands are appending data on files   rm exp_mn_*.tmp end # now we have the data for all shellsend# now we have the data for all patientsset whichone = wcforeach solution (mn2050NCS mn2050NC mn2050) foreach timeframe (1)	# 2)  # nun die vp-ids extrahieren  ls mn_$whichone\_*_$solution\_$timeframe.tmp2 | awk -F'_' '{print $3}' > names.tmp  # alle daten der einzelnen vps in ein file schreiben  cat mn_$whichone\_*_$solution\_$timeframe.tmp2 > mn_all_$whichone\_$solution\_$timeframe.TMP  # und die vp-id davorhaengen  paste -d" " names.tmp mn_all_$whichone\_$solution\_$timeframe.TMP > mn_all_$whichone\_$solution\_$timeframe\4f.data    dot2comma mn_all_$whichone\_$solution\_$timeframe\4f.data end end