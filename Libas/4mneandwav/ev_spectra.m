% Compute eigenvalue spectra for matrices read from different files (pathname\namelist)% namelist contains the filenames with matrices, pathname the path where all these files are stored, elplist contains electrodes to be excluded% (e.g. virtual eye electrodes!)% OH 26.12.97function [data, n, ev, paths, names] = ev_spectra(paths, names, format, elplist, norm_flag, chars);if nargin==0,   disp(' [data, n, ev, paths, names] = ev_spectra(paths, names, format, elplist, norm_flag, chars); ');   return;end;if isempty(names),   if strcmp(format, 'avr'), ending = '*.avr'; end;	if strcmp(format, 'mfxtxt'), ending = '*.asc'; end;   [namelist, names, paths] = read_filelist(ending);   nr_names = length(namelist(:,1));else   nr_names = length(names(:,1));   for i=1:nr_names,      namelist(i,1:length(deblank(names(i,:)))+length(deblank(paths(i,:)))) = sprintf('%s%s', deblank(paths(i,:)), deblank(names(i,:)));   end;end;namelist[data, m, n, latencies] = read_data(namelist, elplist, format);colours = char('r', 'b', 'g', 'm', 'c', 'y', 'b', 'w');if nr_names>length(colours),	disp('Not enough colours for all files! (cnv_pca)');end;disp('Compute singular values and percentage of explained variance for data files');for i=1:nr_names,   if strcmp(norm_flag, 'norm'),      data(1:m(i),1:n(i),i) = normalize(data(1:m(i),1:n(i),i));   end;   ev(i, 1:n(i)) = svd(data(1:m(i),1:n(i),i))'; 		% eigenvalue spectra    ev(i, 1:n(i)) = ev(i, 1:n(i)).^2;   sum = ev(i, 1:n(i))*ones(n(i),1);   ev(i, 1:n(i)) = 100*ev(i, 1:n(i))/sum;				% Percentage of explained variance   disp(ev(i,1));end;disp('Plotting');clf;for i=1:nr_names,	if i<length(colours),		c = sprintf('%sx', colours(i));	else		c = 'bx';   end;   plot(1, ev(i,1), c); hold on;end;legend(names(:,1:chars), 1);  hold on;for i=1:nr_names,	if i<length(colours),		c = sprintf('%sx', colours(i));	else		c = 'bx';   end;   for j=2:n(i),      plot(j, ev(i,j), c); hold on;   end;end;for i=1:nr_names,	if i<length(colours),		c = sprintf('%s', colours(i));	else		c = 'b';   end;   plot(1:n(i), ev(i,1:n(i)), c); hold on;end;axis([1 max(n)+1 0 100]);xlabel('Number of component');ylabel('Explained variance');title('Eigenwertspektren der CNVs innerhalb einzelner Gruppen');%disp('Printing to file');%print -deps MadMac:matlab:data:aphasie:pictures:correl_pcacnv.eps;