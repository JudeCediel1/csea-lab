% coh_avr_ML% computes spectral coherence using MATLAB (welch-periodogram) algorithm% (C) akeil 2000function [CoherMat] = coh_avr_ML(FilePath, Nsensors, pairmat);DataMat = read_avr_MEG(FilePath);%% compute number and kind of sensorpairs (with multiple files - do not compute each time !!!)% pairmat = [];% dummycount = 2;% for sensor1 = 1 : Nsensors-1;% 	for sensor2 = dummycount : Nsensors% 		pairmat = [pairmat;sensor1 sensor2];% 	end% 	dummycount = dummycount + 1; % end% % % compute coherence for each pairCoherMat = [];for pairIndex = 1 : length(pairmat)	if pairIndex/1000 == round(pairIndex/1000)		fprintf('%g out of %g sensorpairs computed \n', pairIndex,length(pairmat))		disp('')	end cohervecdumy = cohere(DataMat(pairmat(pairIndex,1), :), DataMat(pairmat(pairIndex,2), :), 16, 678);  CoherMat(pairmat(pairIndex, 1), pairmat(pairIndex, 2)) = cohervecdumy(1);end			