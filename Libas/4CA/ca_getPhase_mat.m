% CA_getPhase% Version fuer 'grand mean' methode% % erzeugt temporaere dateien mit phasendaten%%% (c) gruber 1999function[NPointsalt,  Catvalorcomplejo_vps] = ca_getphase_mat(FilePath,file_namen,channel, f0, NrTaperPoints, cond);file_namen%Schleife ueber alle Vpsfor nf = 1 : size(file_namen,1)     datei = [FilePath ':' file_namen(nf,:)] ;  eval (['load ' datei])  [data] = eval([file_namen(nf,:)]);    %data = read_avr_MEG([FilePath ':' cond ':' file_namen(nf,:)]);     NPointsalt = size(data, 2);  NPointsold = NPointsalt;   NTrials = 1;  % Npoints runden auf naechste 2erpotenz  matsize = 2;  potsize = 2;  while matsize < NPointsold;     potsize = potsize + 1;     matsize = 2^potsize;  end  NPointsNew = matsize;  wavelet = gener_Wav(NPointsNew, 1, f0, f0);  for trial = 1 : NTrials;         disp(['CA of channel ' num2str(channel) '  , trial ' num2str(trial)])	  	 %data = read_avr_MEG([FilePath ':' cond ':' file_namen(nf,:)]);  	 eval (['load ' datei]) 	 [data] = eval([file_namen(nf,:)]);  	data = data(channel, :);   %EP SUBTRACT   % data = data - erpdata(channel, :);                % insert for subtraction of ERP           % daten padden bis N = NPoints = 2^X    % dazu: daten auf jeden fall als ZEILENVEKTOR !!!!          a = size(data);    if a (1) ~= 1      data = data';    end                   data_pad = [data'; zeros(NPointsNew-NPointsold,1)];                       [Valorcomplejo]= wa_ca(data_pad, wavelet, NPointsNew, NPointsold, NrTaperPoints);           if (trial == 1) & (nf == 1)  	   Catvalorcomplejo_vps = Valorcomplejo;    else       	Catvalorcomplejo_vps = [Catvalorcomplejo_vps ; Valorcomplejo];    end           Valorcomplejo = [];                end % trials end; %Schleife ueber Vps%temporaeres file sichernsize(Catvalorcomplejo_vps)s=['save ' FilePath ':complex_' num2str(channel)  '  Catvalorcomplejo_vps -mat']eval(s);