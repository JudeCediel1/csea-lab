% CA_getPhase% Version fuer 'grand mean' methode% % erzeugt temporaere dateien mit phasendaten%%% (c) gruber 1999function[NPointsalt]= CA_getPhase(FilePath,file_namen,bed,channel,f0, NrTaperPoints,call_nr);file_namen%Schleife ueber alle Vpsfor nf = 1 : size(file_namen,1)     datei = [FilePath file_namen(nf,:)]   [data,V,LH,SB,NChan,NPointsold,NTrials,d1,d2] = ReadAppData(datei);    NPointsalt = NPointsold;  disp('size of data matrix')  disp(size(data))  %Erp aus temp Pfad laden  tempname = [FilePath 'temp:erp_' file_namen(nf,:) '.mat']  eval(['load ' tempname ' -mat'])    % Npoints runden auf naechste 2erpotenz  matsize = 2;  potsize = 2;  while matsize < NPointsold;     potsize = potsize + 1;     matsize = 2^potsize;  end  NPointsNew = matsize;  wavelet = gener_Wav(NPointsNew, 1, f0, f0);  for trial = 1 : NTrials;         disp(['CA of channel ' num2str(channel) '  , trial ' num2str(trial)])	 [data]=ReadAppData(datei, trial, channel);           %EP SUBTRACT    data = data - erpdata(channel, :);                % insert for subtraction of ERP           % daten padden bis N = NPoints = 2^X    % dazu: daten auf jeden fall als ZEILENVEKTOR !!!!          a = size(data);    if a (1) ~= 1      data = data';    end                   data_pad = [data'; zeros(NPointsNew-NPointsold,1)];                       [Valorcomplejo]= wa_ca(data_pad, wavelet, NPointsNew, NPointsold, NrTaperPoints);           if (trial == 1) & (nf == 1)  	   Catvalorcomplejo_vps = Valorcomplejo;    else       Catvalorcomplejo_vps = [Catvalorcomplejo_vps ; Valorcomplejo];    end           Valorcomplejo = [];                end % trials end; %Schleife ueber Vps%temporaeres file sichernsize(Catvalorcomplejo_vps)s=['save ' FilePath 'temp2:gmc_' num2str(channel) '_' bed ' Catvalorcomplejo_vps -mat']eval(s);