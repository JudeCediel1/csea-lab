% topottest% determines t-values for topographies % --> format of inmats: subjects, electrodesfunction [critTmax, critTmin] = topottest_perm2(filemat1, filemat2, bslvec)[a,File,Path,FilePath,NTrialAvgVec,StdChanTimeMat,...	SampRate,AvgRef,Version,MedMedRawVec,MedMedAvgVec,EegMegStatus,...    NChanExtra,TrigPoint,HybridFactor,HybridDataCell,DataTypeVal]=ReadAvgFile(deblank(filemat1(1,:))); mat3d_1 = zeros(size(a,1), size(a,2), size(filemat1,1) ); mat3d_2 = zeros(size(a,1), size(a,2), size(filemat1,1) ); for subject = 1:size(filemat1,1);        a = ReadAvgFile(deblank(filemat1(subject,:)));         mat3d_1(:,:, subject) = bslcorr(a, bslvec);        b = ReadAvgFile(deblank(filemat2(subject,:)));         mat3d_2(:,:, subject) = bslcorr(b, bslvec); endfor draw = 1:2000      % need to shuffe CONDITIONS with subjects%randomly pick indices for subjects, in which %values are swapped betwen mat 1 and mat 2swapindexvec = round(rand(1,size(mat3d_2,3))); % for those indices, swap between mat 1 and mat2mat1 = mat3d_1; mat2 = mat3d_2; mat1(:,:,logical(swapindexvec)) = mat3d_2(:, :, logical(swapindexvec)); mat2(:,:,logical(swapindexvec)) = mat3d_1(:, :, logical(swapindexvec));        [dummy, dummy, dummy, stats] = ttest(mat2, mat1, 0.05, [], 3); topo_tmat = stats.tstat; topo_tvec = mat2vec(topo_tmat); tValvector_sort = sort(topo_tvec);    tmax_vec(draw) = tValvector_sort(floor(length(tValvector_sort).*0.999));    tmin_vec(draw) = tValvector_sort(floor(length(tValvector_sort).*0.001));     if draw/100 == round(draw/100), fprintf('.'), end if draw/1000 == round(draw/1000), disp(draw), endendthist = [tmax_vec tmin_vec];hist(tmax_vec,100)figurehist(tmin_vec,100)figurehist(thist,100)[bin,tval] = hist(thist,500);critbin = sum(bin).*.975cumbins = cumsum(bin);indices = find(cumbins > critbin);index = min(indices);critTmax = tval(index)[bin,tval] = hist(thist,500);critbin = sum(bin).*0.025cumbins = cumsum(bin);indices = find(cumbins < critbin);index = max(indices);critTmin = tval(index)save t_max.dat tmax_vec -asciisave t_min.dat tmin_vec -ascii    