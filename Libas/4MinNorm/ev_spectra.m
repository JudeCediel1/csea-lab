% Compute eigenvalue spectra for matrices read from different files (pathname\namelist)% namelist contains the filenames with matrices, pathname the path where all these files are stored, elplist contains electrodes to be excluded% (e.g. virtual eye electrodes!)% OH 26.12.97function [data, m, ev] = ev_spectra(pathname, namelist, elplist, data, m, max_electrodes);nr_names = length(namelist(:,1));% Determine valid electrodes to be included in the following procedurenr_electrodes = 0;for i=1:max_electrodes,	pruef = 0;	for j=1:length(elplist),		if elplist(j)==i,			pruef = 1;			break;		end;	end;	if pruef==0,		nr_electrodes = nr_electrodes + 1;		arg(nr_electrodes) = i;	end;end;colours = char('r', 'b', 'g', 'm', 'c', 'y', 'b', 'w');if nr_names>length(colours),	disp('Not enough colours for all files! (cnv_pca)');end;if isempty(data),	disp('Reading in data, average referencing');	for i=1:nr_names,		name = sprintf('%s\\%s', pathname, namelist(i,:));		disp(name);		matrix = read_matrix(50,max_electrodes,name);		% 50 is upper bound		[m(i) n(i)] = size(matrix); 		data(1:m(i),:, i) =  matrix(:,arg);		data(1:m(i),:, i) = avg_ref(data(1:m(i),:, i)')';   end;end;disp('Compute principal components of data files');for i=1:nr_names,   ev(i, 1:m(i)) = svd(data(1:m(i),:,i))'; 		% eigenvalue spectra end;disp('Plotting');clf;for i=1:nr_names,	if i<length(colours),		c = sprintf('%sx', colours(i));	else		c = 'bx';   end;   plot(1, ev(i,1)/ev(i,1),c); hold on;end;legend(namelist(:,1:3), 1);  hold on;for i=1:nr_names,	if i<length(colours),		c = sprintf('%sx', colours(i));	else		c = 'bx';   end;   for j=2:m(i),      plot(j, ev(i,j)/ev(i,1),c); hold on;   end;end;for i=1:nr_names,	if i<length(colours),		c = sprintf('%s', colours(i));	else		c = 'b';   end;   plot(1:m(i), ev(i,1:m(i))/ev(i,1),c); hold on;end;axis([1 max(m)+1 0 1]);title('Eigenwertspektren der CNVs innerhalb einzelner Gruppen');%disp('Printing to file');%print -deps MadMac:matlab:data:aphasie:pictures:correl_pcacnv.eps;