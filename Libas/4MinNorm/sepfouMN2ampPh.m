% sepfouMN2ampha% berechnet amplitude und Phase aus getrennt geminimum normten real- und imagninaerteilen% einer SSRcondvec = ['NE'; 'NT'; 'PO']for cond = 1:3	for shell = 1:4		realvec = read_avr(['ubies:emosteady:minNorm:real' condvec(cond, :) 'mn' num2str(shell) '.avr']);		imagvec =  read_avr(['ubies:emosteady:minNorm:imag' condvec(cond,:) 'mn' num2str(shell) '.avr']);				Complexvec = [realvec + i*imagvec];		size(Complexvec)		PowerMat = real(Complexvec.*conj(Complexvec)/128);		AmpMat = sqrt(PowerMat);		PhaseMat = atan(real(Complexvec)./imag(Complexvec));		AmpMNname = (['ubies:emosteady:minNorm:amp' condvec(cond,:) num2str(shell) 'MN.avr'])		PhaseMNname = (['ubies:emosteady:minNorm:pha' condvec(cond,:) num2str(shell) 'MN.avr'])		eval(['save ' AmpMNname ' AmpMat -ascii'])		eval(['save ' PhaseMNname ' PhaseMat -ascii'])			endend