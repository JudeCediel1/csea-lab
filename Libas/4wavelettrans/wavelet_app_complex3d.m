% function [Wavelet_real, Wavelet_imag] = wavelet_app_complex3d(filemat, f0start, f0end, fdelta)% this one performs wavelets in a frequency range, then averages complex fouroer components across all% frequencies and save separately, so that output o fthis function can be pipelined into MNE % 1. read data to get infofor fileindex = 1:size(filemat,1)  [data,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat(fileindex,:)));  NPointsNew = size(data,2);      % compute wavelets and their parameters   wavelet = gener_wav(NPointsNew, fdelta, f0start, f0end);   disp('size of waveletMatrix')  disp(size(wavelet))  disp (' frequency step for delta_f0 = 1 is ')  disp(SampRate/NPointsNew)   data_pad = [data]';       % create 3d matrix objects for wavelet   % channels * time * frequencies       waveletMat3d = repmat(wavelet, [1 1 size(data,1)]);     waveletMat3d = permute(waveletMat3d, [3, 2, 1]);         % loop over trials        disp(['trial index of '])    disp(NTrials)        for trialindex = 1:NTrials;                   [data,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat(fileindex,:)), trialindex);                fprintf('.')                 if trialindex/10 == round(trialindex/10), disp(trialindex), end            data = bslcorr(data, 1:100);                 data_pad = [data]';        % window data with cosine square window                window = cosinwin(30, size(data,2), size(data,1));         data = data .* window;                 data_pad3d = repmat(data_pad', [1 1 size(wavelet,1)]);             % transform data  to the frequency domain        data_trans = fft(data_pad3d, NPointsNew, 2);        thetaMATLABretrans = [];         ProdMat= waveletMat3d .*(data_trans);        thetaMATLABretrans = ifft(ProdMat, NPointsNew, 2);                             Wavelet_real(:, :, trialindex) = mean(real(thetaMATLABretrans), 3); % get rid of frequencies by averaging across them            Wavelet_imag(:, :, trialindex) = mean(imag(thetaMATLABretrans), 3);                end % loop over trials          eval(['save ' deblank(filemat(fileindex,:)) '.WAreal.mat Wavelet_real'])          eval(['save ' deblank(filemat(fileindex,:)) '.WAimag.mat Wavelet_imag'])           fclose('all') end