function[AEMFilePathMat]=CalcAutoEditMEGMat_as(MsiFileMat,TimeStatusVec,CalcBaseStatus,BaseStartPoint,BaseEndPoint);%==================================================================%%	CalcAutoEditMEGMat%%	Markus Junghoefer	[2000]%%%	Function definition%%	beware!! msi und msi.ses are easily confused !!!!!!!!!!!!!!!!%%==================================================================if nargin<5; BaseEndPoint=[]; endif nargin<4; BaseStartPoint=[]; endif nargin<3; CalcBaseStatus=0; endif nargin<2; TimeStatusVec=[]; endif nargin<1; MsiFileMat=[]; endString='Choose MSI session file(s):';[DefPath]=SetDefPath(1,'*ses.msi');[NFiles,MsiFileMat]=ReadFileNames(MsiFileMat,DefPath,String);if NFiles==0; return; end[AEMFilePathMat]=FileNameExt2Mat(MsiFileMat,'.AEM');for FileIndex=1:NFiles	% 	[MsiFile,MsiPath,MsiFilePath]=GetFileNameOfMat(MsiFileMat,FileIndex);% 	SetFilePath=PutFileExt2Mat(MsiFilePath,'.set');% 	[SetFilePath,ParaVec,MEGSensorPosMat,EEGSensorPosMat,MEGSensorNameVec,EEGSensorNameVec,MEGSensorIndexVec,EEGSensorIndexVec]=ReadMsiSet(SetFilePath);%%% commented andreas replaced by paravec[MsiFile,MsiPath,MsiFilePath]=GetFileNameOfMat(MsiFileMat,FileIndex);ParaFilePath = [MsiFilePath(1:length(MsiFilePath)-3) 'msi.para'];[ParaVec, ParaFile,ParaPath,ParaFilePath] = ReadData(ParaFilePath,1,[],'ascii','ascii');	NTotChan=ParaVec(1);NTotPoints=ParaVec(2);NTrials=ParaVec(3);NMegChan=ParaVec(4);NEegChan=ParaVec(8);SampRate=ParaVec(5);SampPeriod=ParaVec(6);BaseMs=ParaVec(7);NPoints = ParaVec(9);NMEegChan=NMegChan+NEegChan;		if isempty(TimeStatusVec)		TimeStatusVec=ones(NPoints,1);	end	[TimeIndVec,NoTimeIndVec,TimeStatusVec,NInt,IntStartVec]=ChooseTimeIndTmp(1,[],[],TimeStatusVec,NPoints);			if isempty(TimeIndVec); error('TimeIndVec is empty in CalcAutoEditMat !'); end	NPointsCalc=length(TimeIndVec);	for NIntIndex=1:NInt		NoTransVec(NIntIndex)=find(TimeIndVec==IntStartVec(NIntIndex));	end	TransStatusVec=ones(size(TimeIndVec));	if NInt>1		TransStatusVec(NoTransVec)=zeros(length(NoTransVec),1);	end		%=======================================================		AbsMat=ones(NTrials,NMegChan);	TraMat=ones(NTrials,NMegChan);	StdMat=ones(NTrials,NMegChan);			fprintf('\n')	clc;	fprintf('Start reading data from file...\n\n');	fprintf(MsiFilePath);	fprintf('\n\n');	MsiFid=fopen(MsiFilePath,'r');		for TrialIndex=1:NTrials		DataMat=fread(MsiFid,[NMEegChan,NPoints],'float');		DataMat=DataMat(1:NMegChan,TimeIndVec);			max(max(DataMat))		%==========Subtract the baseline=================		if CalcBaseStatus			[DataMat]=CalcBaseline(DataMat,BaseStartPoint,BaseEndPoint);			end		DataMat=DataMat';	%Da std, abs etc ueber Kanaele rechnen wuerden		%==========Calculate the StdMat=================		StdMat(TrialIndex,:)=std(DataMat);		%==========Calculate the AbsMat=================		AbsMat(TrialIndex,:)=max(abs(DataMat));			%==========Calculate the TraMat=================		MaxAbsVec=zeros(1,NMegChan);		AbsVecTmp=zeros(1,NMegChan);				for TimeIndex=2:NPointsCalc				if TransStatusVec(TimeIndex)					AbsVecTmp=abs(DataMat(TimeIndex,:)-DataMat(TimeIndex-1,:));				HigherChan=find(AbsVecTmp>MaxAbsVec);				MaxAbsVec(HigherChan)=AbsVecTmp(HigherChan);			end		end		TraMat(TrialIndex,:)=MaxAbsVec;		if TrialIndex==1 | round(TrialIndex./10)==TrialIndex./10				fprintf('\n');				fprintf('Trial %g of %g     ',TrialIndex,NTrials);			else				fprintf('.');			end		end	end %for TrialIndex	fclose(MsiFid);	%=============================Save EditMat to file================================================================	[AEMFile,AEMPath,AEMFilePath]=GetFileNameOfMat(AEMFilePathMat,FileIndex);	[NoUse,EndPos]=SaveData(AbsMat',AEMFilePath,1);	[NoUse,EndPos]=SaveData(StdMat',AEMFilePath,1,[],'int16','float32',1,EndPos);	[NoUse,EndPos]=SaveData(TraMat',AEMFilePath,1,[],'int16','float32',1,EndPos);	SaveData(ones(size(AbsMat))',AEMFilePath,1,[],'int16','float32',1,EndPos);	end	%FileIndexreturn;