% circTsquare% computes circular T^2 statistic for a set of at files, with known ssvep% frequency and flicker onset/offset latency for each sensor% %%			AK 08/2013%%function[Tsquarevec, signum] = ssVEP2circT(filemat, frequency, on_to_off_vector_SP, plotflag)% loop over filesfor index = 1:size(filemat,1)% read file and header [AvgMat,File,Path,FilePath,NTrialAvgVec,StdChanTimeMat,...	SampRate,AvgRef,Version,MedMedRawVec,MedMedAvgVec,EegMegStatus,...    NChanExtra,TrigPoint,HybridFactor,HybridDataCell,DataTypeVal]=ReadAvgFile(deblank(filemat(index,:))); % extract only ssVEPdatamat = AvgMat(:, on_to_off_vector_SP); % partition the signal into indep/non-overlap segments with equal length% and do FFTs% (1) find duration of three cycles in sample pointsthreecycleSP = round(4* SampRate/frequency); % (2) segment the data into these segments and do FFT on each segmentnumsegments = floor(size(datamat,2)/threecycleSP); % startvector of single segmentssegstartvec = 1:threecycleSP: numsegments*threecycleSP; % (3) find the bin of the target frequency in the FFT (below)  freqvec = fix([0:1000/(threecycleSP * (1000/SampRate)):SampRate] - frequency);  freqbin = find(freqvec == 0);   % flip datamat for fft  datamat = datamat'; fftmat = []; for segnum = 1:numsegmentsfft_all =  fft(datamat(segstartvec(segnum): segstartvec(segnum)+threecycleSP, :)); fftmat = [fftmat; fft_all(freqbin,:)]; endalbedmat = fftmat'; M = length(albedmat(1,:)); if M ~= numsegments, error('something is wrong...'), end%1 complex mean for each electrode: Z_est = xest + i YestmeanZvec = mean(albedmat');%2 V_indiv for each electrode: Variance with 1/2(M-1)% dazu : erzeuge complexen vector mit summe der(residuen v. Stichprobenmittelwert)for elc = 1 : length(meanZvec);	V_indiVec(elc) = sum(abs(albedmat(elc,:)-meanZvec(elc)).^2)./ (2*(M-1));           % V_indiv fuer jede Elektrodeend% 3 V_group for each electrode: depends on population mean % is signal present - i.e. is population mean = 0 i0 ?%('hypothesized population mean: zero')for elc = 1 : length(meanZvec);    V_groupVec(elc) = (abs(meanZvec(elc))).^2 .*(M/2); endTsquarevec = (V_groupVec ./ V_indiVec) / M;significvec  = fpdf(Tsquarevec, 2, 2*M-2); outmat = [(1:elc)' Tsquarevec' significvec']if plotflagplot(Tsquarevec), title(deblank(filemat(index,:))),  pause(1)end%SaveAvgFile([deblank(filemat(index,:)) '.Tsq'],outmat,NTrialAvgVec,StdChanTimeMat, 1);signum(index) = length(find(significvec < 0.01)); end