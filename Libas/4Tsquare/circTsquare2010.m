% circTsquare% computes circular T^2 statistic for atgfiles% %%			Andreas am 10.03.2010%%function[Tsquarevec] = circTsquare2010(filemat,Nsegments); for fileindex = 1: size(filemat,1);     avgmat = readavgfile(deblank(filemat(fileindex,:)));         % segment avgmat into Nsegments across the temporal dimension.         segduration = floor(length(avgmat(1,:)./Nsegments)    startvector = 1:segduration:length(avgmat(1,:)-segduration-1;     for start = 1:length(startvector);         if start == 1;             fftmat = fft(avgmat(:,startvector(start):startvector(start+1))');         else            fftmat = [fftmat fft(avgmat(:,startvector(start):startvector(start+1))')];         end    end        % two estimates for the population variance are computed for each electrode% 1.) V_indiv% 2.) V_group% dazu noetig:  M; mean Z = Zest = xest + i YestM = Nsegments; %1 complex mean for each electrode: Z_est = xest + i YestmeanZvec = mean(albedmat');%2 V_indiv for each electrode: Variance with 1/2(M-1)% dazu : erzeuge complexen vector mit summe der(residuen v. Stichprobenmittelwert)for elc = 1 : 129;	for estim = 1 : M	squareVec(estim)= (real(albedmat(elc,estim)-meanZvec(elc))).^2 + (imag(albedmat(elc,estim)-meanZvec(elc))).^2;  	% Residuen 	end	V_indiVec(elc) = sum(squareVec) / (2*(M-1));           % V_indiv fuer jede Elektrodeend% 3 V_group for each electrode: depends on population mean % is signal present - i.e. is population mean = 0 i0 ?disp('hypothesized population mean: zero')disp(' ')for elc = 1 : 129;	squarepop = real(meanZvec(elc)).^2 + imag(meanZvec(elc)).^2;	V_groupVec(elc) = (squarepop .* (M/2));           % V_indiv fuer jede ElektrodeendTsquarevec = (V_groupVec ./ V_indiVec) / M;