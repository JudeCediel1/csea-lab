% Ttest.m erhaelt zwei vektoren% berechnet T-wert Ÿber die dritte dimension der inmats function[tmat] = ttestwithin_mat(mat1, mat2)vector1 = squeeze(mat1(1,1,:));vector2 = squeeze(mat2(1,1,:));% 1. berechne ML-schaetzer fuer standardfehler der differenzen    dfx = length(vector1) - 1;    dfy = length(vector2) - 1;    dfe  = dfx + dfy;for row = 1:size(mat1,1);    for col = 1:size(mat1,2);            vector1 = squeeze(mat1(row,col,:));        vector2 = squeeze(mat2(row,col,:));                    msx = dfx * (std(vector1))^2;        msy = dfy * (std(vector2))^2;        difference = mean(vector1-vector2);        sumdiff1 = sum((vector1-vector2).^2);        sumdiff2 = ((sum(vector1-vector2)).^2)./(length(vector1));        vector1-vector2;        sqrvec = ((vector1-vector2)-difference) .^2;        sum(sqrvec);        sigmadach_1 = sqrt((sumdiff1 - sumdiff2) ./ dfy);        sigmadach = sigmadach_1/sqrt(length(vector1));        tVal =  difference / sigmadach;                tmat(row,col) = tVal;     endend