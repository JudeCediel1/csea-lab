% liest operantfiles aus und erstellt wunderschoene konditionfiles%% - hoffentlichclear%function[OK_file, KK_file, OKnTrials, KKnTrials] = getcondfiles(FilePath);%if nargin == 0	[File, Path]=uigetfile ('ubies:exoperant:behav:*txt', 'select DOS txt file');	FilePath = [Path File];%end% txt file oeffnen[fid, msg] = fopen(FilePath, 'r' );if fid == -1  error(msg);end;% header lesen und anzeigendumline = fgetl(fid);dumline = fgetl(fid);dumline = fgetl(fid)dumline = fgetl(fid);dumline = fgetl(fid);dumline = fgetl(fid)% EP-Block%% EP-Block einlesen und anzeigenstimvecEP = [ ];for EPtrial = 1 : 60;	lineEP = fgetl(fid);	stimvecEP(EPtrial,:) = str2num(lineEP); end% EP-conditionfile erzeugenEPcon = [ ];for index = 1 : 60;	if stimvecEP(index,2) >= 30		EPcon(index) = 1;	else		EPcon(index) = 0;	endendEPcon = EPcon';% naechsten block file einlesen:  OK (SP vorher oder nachher)dumline = fgetl(fid)if dumline == ['SP Durchgang']	dumline = fgetl(fid)	dumline = fgetl(fid)	dumline = fgetl(fid)	dumline = fgetl(fid)endHitmatOK = [ ];for trial = 1 : 60;	lineOK = fgetl(fid);	if length(str2num(lineOK)) > 5	HitmatOK(trial,:) = [0 1 10 0 10];	else	HitmatOK(trial,:) = str2num(lineOK);	end end dumline = fgetl(fid) for trial = 61 : 120;	lineOK = fgetl(fid);	linevecOK =  str2num(lineOK);		if length(linevecOK) > 5 & linevecOK(6)>0	      HitmatOK(trial,:) = [0 1 10 0 10];	elseif length(linevecOK) > 5 & linevecOK(6)==0	      HitmatOK(trial,:) = [0 0 0 0 0];	else        HitmatOK(trial,:) = str2num(lineOK);	end end % daraus conditionfile basteln % Trials ohne response eliminieren, da kein DIN2 trig => kein trial im egis file OKcon = [ ]; for index = 1:120	 if  HitmatOK(index,3)== 0		 OKcon = OKcon;	 elseif HitmatOK(index,2)== 0 & HitmatOK(index,5)>=40		 OKcon = [OKcon; 1];	 elseif HitmatOK(index,2) == 0 & HitmatOK(index,5) < 40		 OKcon = [OKcon; 0];         elseif HitmatOK(index,2) >= 1 		 OKcon = [OKcon; 0];		 endenddumline = fgetl (fid)if dumline == ['SP Durchgang']	dumline = fgetl(fid)	dumline = fgetl(fid)	dumline = fgetl(fid)	dumline = fgetl(fid)end% K durchgang einlesenHitmatK = [ ]for index = 1 : 90	lineK = fgetl(fid);	linevec = str2num(lineK);	if length(linevec) == 4	HitmatK(index,:) = [(linevec) linevec(4)];	else	HitmatK(index,:) = (linevec);	end end dumline = fgetl (fid) for index = 91 : 180	lineK = fgetl(fid);	linevec = str2num(lineK);	if length(linevec) == 4	HitmatK(index,:) = [(linevec) linevec(4)];	else	HitmatK(index,:) = (linevec);	end end % ab hier fuer ERTS % daraus conditionfile basteln	 Kcon = [ ]; for index = 1:180	if  HitmatK(index,4) == 0 & HitmatK(index,5) == 0	% 1. Trials ohne response eliminieren, da 	Kcon = Kcon ;    							% kein DIN2 trig => kein trial im egis file	elseif HitmatK(index,5) > 20	Kcon = [Kcon; 1];	else	Kcon = [Kcon; 0];  	endend% conditionfiles vervollstaendigen und abspeichern%fnameSPcond = ([FilePath(1:26) 'EP.CON']);fnameOKcond = (['ubies:exoperant:confiles:' FilePath(23:26) 'OK.CON']);fnameKcond = (['ubies:exoperant:confiles:' FilePath(23:26) 'K.CON']);% fuer OK:fnameOKcond[fidOK, msg] = fopen(fnameOKcond, 'wt' );if fidOK == -1  error(msg);end;conheader = (['1 ' num2str(length(OKcon))])  % confile header fprintf(fidOK,'%s\n', conheader); for i = 1:length (OKcon)	fprintf(fidOK,'%s\n',num2str(OKcon(i)));endfclose(fidOK)% fuer K:fnameKcond[fidK, msg] = fopen(fnameKcond, 'wt' );if fidK == -1  error(msg);end;conheader = (['1 ' num2str(length(Kcon))])  % confile header fprintf(fidK,'%s\n', conheader); for i = 1:length (Kcon)	fprintf(fidK,'%s\n',num2str(Kcon(i)));endfclose(fidK)