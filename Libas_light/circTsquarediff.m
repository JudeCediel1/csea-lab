% circTsquare% computes circular T^2 statistic for Fourier components (at a given frequency) from% FFT on steady-state data. Inputfile: Mat-format (complex) 129 X nr_indipendent estimates% => test for significant differences M = number of estimates must be equal across conditions%%			Andreas  10.03.1999%%function[Tsquarevec] = circTsquarediff(FouriercompMAT1, FouriercompMAT2);if nargin<2;	load_itend	% two estimates for the population variance are computed for eacvh electrode% 1.) V_indiv% 2.) V_group% dazu noetig:  M; mean Z = Zest = xest + i Yestalbedmat1 = FouriercompMAT1;albedmat2 = FouriercompMAT2;M = size(albedmat1,)%1 complex mean for each electrode: Z_est = xest + i YestmeanZvec1 = mean(albedmat1');meanZvec2 = mean(albedmat2');%2 V_indiv for each electrode: Variance with 1/2(M-1)% dazu : erzeuge complexen vector mit summe der(residuen v. Stichprobenmittelwert)for elc = 1 : 140;	for estim = 1 : M	squareVec1(estim)= (real(albedmat1(elc,estim)-meanZvec1(elc))).^2 + (imag(albedmat1(elc,estim)-meanZvec1(elc))).^2;  	% Residuen 	squareVec2(estim)= (real(albedmat2(elc,estim)-meanZvec2(elc))).^2 + (imag(albedmat2(elc,estim)-meanZvec2(elc))).^2;	end	V_indiVec(elc) = (sum(squareVec1) + sum(squareVec2)) ./ 2*(2*M-2)        % V_indiv fuer jede Elektrodeend% 3 V_group for each electrode: depends on population mean % is signal present - i.e. is population mean = 0 i0 ?disp('hypothesized population mean: zero')disp(' ')for elc = 1 : 129;	squarepop(elc) = (real(meanZvec1(elc)).^2 + imag(meanZvec1(elc)).^2) - (real(meanZvec2(elc)).^2 + imag(meanZvec2(elc)).^2)	V_groupVec(elc) = (squarepop(elc)  .*  ((M * M)/(2*(M + M))));           % V_indiv fuer jede ElektrodeendTsquarevecdiff = (V_groupVec ./ V_indiVec) .* ((M+M)/M*M);