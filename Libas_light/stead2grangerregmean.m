%==================================================================%%	stead2grangerregmean%%calculates granger causality in source space, for regional dipoles from%besa %	%	Function definition function [n_sig_vec] = stead2grangerregmean(filemat, plotflag, diff_flag, norm_flag);       if nargin < 2, plotflag = [], end    exp = 'emosteady'         for fileindex = 1 : size(filemat,1);            datamat = ReadAvgFile(filemat(fileindex,:));                             datamat = datamat([75 83 95 100 84 86 70 64 57 66 53 122 9 33 22],:);         grangermat2 = datamat(:,200:4:900);                if diff_flag        flipmat = grangermat2';        flipmatdiff = diff(flipmat);         grangermat2 = flipmatdiff';         end                if norm_flag            for channel = 1:size(grangermat2,1)            grangermat2(channel,:) = grangermat2(channel,:) ./(max(grangermat2(channel,:))-min(grangermat2(channel,:)));            end        end                             % if plotflag, figure(1), plot(datamat'), end         % calculate granger stats        disp('granger analysis')        uroot = aks_check_covariance_stationarity(grangermat2,2); if plotflag, figure(10), plot(uroot), hold off, end        if sum(uroot) > 0, disp([filemat(fileindex,:) '  has uroot > 0']), pause, end        [bic(fileindex),aic] = aks_find_model_order(grangermat2,2,5);        [ret] = aks_granger_regress_as(grangermat2,2);        [GC,FS] = aks_findsignificance(ret.gc,ret.fs,.01, 0);                eval(['save ' filemat(fileindex,:) '.ret.mat -struct ret'])                n_sig_vec(fileindex) = length(find(GC > 0));                        if plotflag, figure(2), aks_plotcausality(FS, 2), title(filemat(fileindex,:)), pause(1), endend