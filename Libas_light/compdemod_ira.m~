function[demodmat,phasemat] = compdemod_ira(studyname,subjnum,targfreq,bslvec);
%
% COMPDEMOD: Matlab script for complex demodulation of EEG epoch
%
%              by Ira Fischler  5/07
%              core function by Andreas Keil
%
%   Call syntax:
%   COMPDEMOD studyname subjnum targfreq bslvec
%             studyname   = the filestem for the study (e.g. SD82a_ )
%             subjnum     = 3-digit subject number
%             targfreq    = the single freq for amplitude x time analysis
%                  
%   Parameters in PRM file:               
%             pathname    = location of datafiles
%             nchan       = number of channels (usually 16)
%             nsamp       = number of samples per trial
%             ntrials     = total number of trials in file
%             srate       = sampling rate in msec
%   Output:
%             matrices for the demodulated function at targfreq (*Hz.amp),
%             and phase info (*HZ.phs)
%
% the param text file has pathname,nchan,nsamp,ntrials,srate 
   paramfilename = strcat(studyname,'.prm');
   paramfile = fopen(paramfilename); % default fopen is open for read
   pathname = fgetl(paramfile); %reads in first line as data folder path, discard NewLine
   status = fclose(paramfile);

% read in params as integers, ignoring first 2 lines in file:
   nChan = 16, nTrials=60, nSamp=6000, SampRate = 100
   % read in gains as floating point vector, 16 lines, ignoring first 3 lines in file:
   [gain] = 1
  % path(pathname,path); % adds data path to Matlab path

% add extensions to filename stem
   eeginfilename  = 'SD82a_234.dct'
   outfilename = 'SD82a_234.dct.out'

% open file channels for read/write
   eeginfile  = fopen(eeginfilename,'r'); % DCT (corr EEG) file, 'r' opens for read only                    
   %eegoutfile = fopen(eegoutfilename,'w'); % create new DMD file and open for writing
   
% main trial loop; reads in trial from DCT, derives demodulated amp@target freq function    
   % for trialnum = 1:ntrials, % cross trial loop
    TrialMat = fread(eeginfile,[nChan,nSamp],'int16');
    size(TrialMat)
	taxis = 0:1000/SampRate:size(TrialMat,2)*1000/SampRate - 1000/SampRate;
	taxis = taxis/1000; 
    
	M2 = 150;
	squarecos1 = (cos(pi/2:(pi-pi/2)/M2:pi-(pi-pi/2)/M2)).^2;
	
	squarecosfunction = [squarecos1 ones(1,length(taxis)-length(squarecos1).*2) fliplr(squarecos1)];
	
	size(squarecosfunction)
	
	[B, A] = butter(5, 0.4);
	
	for channel = 1:nChan
        Xsin(channel,:) = TrialMat(channel,:) .* squarecosfunction .* sin(targfreq .*2 *pi * taxis);
        Xcos(channel,:) = TrialMat(channel,:) .* squarecosfunction .* cos(targfreq .*2 *pi * taxis);
        XsinF(channel,:) = filtfilt(B,A,Xsin(channel,:));
        XcosF(channel,:) = filtfilt(B,A,Xcos(channel,:));
	end
	
	demodmat = 2 * sqrt(XsinF .^2 + XcosF .^2);
    
    [B, A] = butter(5, 0.08);
    
    xf = filtfilt(B,A,demodmat'); 
    
    [B,A] = butter(5,0.0025,'high')
    
    xf = filtfilt(B,A,xf); 
    % transpose the demodulated matrix
    demodmat = xf'; 
 
    if ~isempty(bslvec); 
        demodmat = bslcorr(demodmat, bslvec);
    end
    
	phasemat = atan(XsinF ./ XcosF); 
% save the demod (amp) and phase (pha) matrices for this trial as text files	
	
    %eval(['save ' outfilename '.pha phasemat -ascii'])
       
% write corrected EEG data for trial to DCT
         %fwrite(eegoutfile,TrialMat,'int16');
       plot TrialMat
       %clear TrialMat;
   %end % of cross-trial (trialnum) FOR loop
   
   % close data files, write new rej file with RXJ extension
   fprintf('finished! Closing all files for this subject.\n')
   fclose ('all');
return