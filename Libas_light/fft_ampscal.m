%% Skalierte Ausgabe der Amplitude einer FFT%%%% Aufruf:  Ampmat = fft_amp(data,FS);%%%% data :   Datenmatrix, welche einer FFT unterzogen werden soll.%%          Format: Matlab Matrix%%                  Zeilen = Kanäle%%                  Spalten = Zeitpunkte%% FS   :   Sampling Frequenz%%          Format: Skalar%%                  %%%% MX   :   Ausgabematrix, welche die Amplituden pro Frequenz enthält%%          Format: Matlab Vektor%%                  Zeilen = Frequenz%%                  Spalten = Kanal%% %% f    :   Ausgabevektor, welcher die Frequenz für jede Zeile in MX angiebt %%%% siehe auch http://www.utexas.edu/math/Matlab/Manual/tec6.2.htmlfunction [MX, f] = fft_ampscal(data,FS);                               % FunktionsdefinitionNFFT = 2.^(ceil(log(length(data))/log(2)));                         % Nächste höchste Power von 2, welche                                                                    % größer als die Anzahl der Datenpunkte ist                                                                    FN = FS/2;                                                          % Nyquist Frequenz bestimmenfftMat = fft(data',NFFT);                                           % FFT durchführenNumUniquePts = ceil((NFFT+1)/2);                                     % Da FFT symmetrisch ist, zweite Hälfte wegschmeißenfftMat = fftMat(1:NumUniquePts,:);MX = abs(fftMat);                                                   % Amplitude berechnenMX = MX*2;                                                          % Zweite Hälfte wurde weggelassenMX(1) = MX(1)/2;                                                    % DC trat aber nicht doppelt aufif ~rem(NFFT,2),                                                    % Nyquist Frequenz (falls vorhanden) auch nicht doppelt    MX(length(MX))=MX(length(MX))/2;endMX=MX/NFFT;                                                         % FFT so skalieren, daß sie keine Funktion von NFFT istf=(0:NumUniquePts-1)*2*FN/NFFT;                                     % Frequenzschritte berechnenplot(f, MX);                                                        % Frequenz vs. Amplitude plotten