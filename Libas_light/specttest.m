% specttest% berechnet multiple Ttests Äber input matrix, gem...¤ groupingvariablenfunction[SigVec]= specttest(InMat, groupColInd, DiviVec);if nargin < 3   DiviVec = input('insert vector containing divison IDs');end%ersetze alle -1 in InMat durch 0% minvec = find(InMat(:,[groupColInd+1:length(InMat(1,:))]) == -1);% InMat(minvec) = 0;% InMat = sparse(InMat);diviIndexVec = []NONdiviIndexVec = []SigVec = [];SigMat = [];	for x = 1 : length(DiviVec)   	diviIndexVectmp = find(InMat(:,groupColInd)== DiviVec(x));   	NONdiviIndexVectmp = find(InMat(:,groupColInd)~= DiviVec(x));      diviIndexVec = [diviIndexVec; diviIndexVectmp];      NONdiviIndexVec = [NONdiviIndexVec; NONdiviIndexVectmp];   end      % fÄhre ttests durch			for question = 2:length(InMat(1,:)); % schleife Äber fragen                       [tVal, greatFlag] = Ttest(nonzeros(InMat(diviIndexVec,question)), nonzeros(InMat(NONdiviIndexVec,question)));         if abs(tVal)>2.59            SigVec(question-1)= 2;         elseif abs(tVal)>1.64 & abs(tVal)<2.59            SigVec(question-1)= 1;         else            SigVec(question-1)= 0;         end         		end                     