function [AmpMatInd,AmpMatEv,RayPMat,RayBarMat,f,ph]=calcwavelet2(mat,FS,numfreq,m);%[AmpMatInd,AmpMatEv,RayPMat,RayBarMat,f]=calcwavelet2(mat,FS,numfreq,m);%%Calculates time-frequency representation using Morlet wavelets (amplitude) %and phase-locking values.%%required input:%   - mat: 3 dimensional matrix (electrodes x points x epochs), e.g.%           EEG.data%   - FS: sampling frequency%%optional input:%   - numfreq: number of frequencies to return (default 30).%   - m: width of wavelets in cycles (default 7)%%The standard deviation in the frequency domain (sf) at frequency f0 is %defined as: sf = f0/width%The standard deviation in the temporal domain (st) at frequency f0 is %defined as: st = width/f0 = 1/sf%%Output:%   - AmpInd: amplitude-TF including induced and evoked activity (e.g. mikroV^2/Hz^2)%   - AmpMatEv: amplitude-TF including only evoked activity%   - RayPMat: phase-locking p-values of Rayleigh statistic%   - RayBarMat: mean resultant length of phase dispersion%   - f: frequency vector (logarithmic, yielding higher resolution at lower%       frequencies%   - ph: phase angles (radians) of single trials%%Function uses following external functions:%   - wavelet: from wtc-r15 package%   - rayleigh: from PhasePACK package%%Links:%   - http://www.pol.ac.uk/home/research/waveletcoherence/download/%   - http://www.vis.caltech.edu/~rizzuto/phasepack/%%Nathan June 2006if nargin < 4    m = 7;endif nargin < 3    m = 7;    numfreq = 30;end[chann, points, epochs] = size(mat);numfreq = numfreq-1;ph = [];for k = 1:chann        disp(['processing channel ' num2str(k)])        wave = [];    amp = [];        %Induced Activity    for u = 1:epochs    [tmp,period] = wavelet(mat(k,:,u),1/FS,1,-1,-1,numfreq,'MORLET',m);    wave = cat(3,wave,tmp); %save complex    amp = cat(3,amp,abs(tmp));        end %u       AmpMatInd(:,:,k) = sum(amp,3) / epochs; %%%%%%?????    AmpMatInd(:,:,k) = (AmpMatInd(:,:,k)/(FS/2)).^2;        %Evoked Activity    erp = mean(mat(k,:,:),3);    [tmp2,period] = wavelet(erp,1/FS,1,-1,-1,numfreq,'MORLET',m);    AmpMatEv(:,:,k) = abs(tmp2);    AmpMatEv(:,:,k) = (AmpMatEv(:,:,k)/(FS/2)).^2;        %add phase-locking        for freqind=1:length(period)        for pointind=1:points            [RayPMat(freqind,pointind,k),RayBarMat(freqind,pointind,k)]=rayleigh(squeeze(angle(wave(freqind,pointind,:))));        end%pointind    end% freqind        ph(:,:,:,k)=angle(wave);    end %kf = 1./period;