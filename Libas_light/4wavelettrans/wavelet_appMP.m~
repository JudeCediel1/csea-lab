% magnfunction [WaPower] = wavelet_appMP(filemat, fStartHz, fEndHz, fDeltaHz); fclose('all')% 1. read data to get infofor fileindex = 1:size(filemat,1)  [data,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat(fileindex,:)));  NPointsold = size(data,2);    % Npoints runden auf naechste 2erpotenz  matsize = 2;  potsize = 2;    while matsize < NPointsold;  potsize = potsize + 1;  matsize = 2^potsize;  end  NPointsNew = matsize;    % compute wavelets and their parameters   wavelet = gener_Wav(NPointsNew, fDeltaHz*NPointsNew/SampRate, fStartHz*NPointsNew/SampRate, fEndHz*NPointsNew/SampRate);   disp('size of waveletMatrix')  disp(size(wavelet))  disp (' frequency step for delta_f0 = 1 is ')  disp(SampRate/NPointsNew)   data_pad = [data zeros(size(data,1), NPointsNew-NPointsold)]';       % create 3d matrix objects for wavelet   % channels * time * frequencies       waveletMat3d = repmat(wavelet, [1 1 size(data,1)]);     waveletMat3d = permute(waveletMat3d, [3, 2, 1]);         % loop over trials        disp(['trial index of '])    disp(NTrials)        for trialindex = 1:NTrials;                   [data,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat(fileindex,:)), trialindex);                fprintf('.')                 if trialindex/10 == round(trialindex/10), disp(trialindex), end            data = bslcorr(data, 1:100);                 data_pad = [data zeros(size(data,1), NPointsNew-NPointsold)]';        % window data with cosine square window        window = cosinwin(50, size(data,2), size(data,1));         data = data .* window;                 data_pad3d = repmat(data_pad', [1 1 size(wavelet,1)]);             % transform data           data_trans = fft(data_pad3d, NPointsNew, 2);        thetaMATLABretrans = [];         ProdMat= waveletMat3d .*(data_trans);        thetaMATLABretrans = ifft(ProdMat, NPointsNew, 2);                if trialindex == 1            WaPowerSum = abs(thetaMATLABretrans).* 10;         else        WaPowerSum = WaPowerSum + abs(thetaMATLABretrans).* 10;         end    end       WaPower = WaPowerSum./NTrials;         WaPower = WaPower(:, 1:NPointsold, :);        WaData.tAxis = [0:NPointsold-1]*(.004);        WaData.fAxis = [0:((fEndHz-fStartHz)/(fDeltaHz))]*(fDeltaHz) +  fStartHz;        WaData.WaPower = WaPower;     eval(['save ' deblank(filemat(fileindex,:)) '.struc.mat WaData'])        disp(['Wavelet data has been saved to ' deblank(filemat(fileindex,:)) '.struc.mat']);    figure        wavelet_plotMP        end%This is being stored here fr now. Baseline correction. Will use this%later.%WaData.WaPower2 = bslcorrwamat_as(WaData.WaPower, 25:50);%contourf(WaData.tAxis,WaData.fAxis,squeeze(WaData.WaPower2(68,:,:))')