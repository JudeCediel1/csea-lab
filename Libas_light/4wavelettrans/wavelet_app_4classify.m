% magno_waveletfunction [WaPower1] = wavelet_app_4classify(filemat1, filemat2, f0start, f0end, fdelta, freqindex); if nargin < 6,     freqindex = []; end% 1. read data to get infofor fileindex = 1:size(filemat1,1)        outmat3d1 = [];     outmat3d2 = [];   [data1,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials1,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat1(fileindex,:)));  [dummy,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials2,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat2(fileindex,:)));    NPointsNew = size(data1,2);       % compute wavelets and their parameters   wavelet = gener_wav(NPointsNew, fdelta, f0start, f0end);   disp('size of waveletMatrix')  disp(size(wavelet))  disp (' frequency step for delta_f0 = 1 is ')  disp(SampRate/NPointsNew)       % create 3d matrix objects for wavelet   % channels * time * frequencies       waveletMat3d = repmat(wavelet, [1 1 size(data1,1)]);     waveletMat3d = permute(waveletMat3d, [3, 2, 1]);         % loop over trials        disp(['trial index of '])    disp(min(NTrials1, NTrials2) )        for trialindex = 1:min(NTrials1, NTrials2) ;                  [data1,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials1,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat1(fileindex,:)), trialindex);          [data2,Version,LHeader,ScaleBins,NChan,NPointsold,NTrials2,SampRate,ch_AvgRef]=ReadAppData(deblank(filemat2(fileindex,:)), trialindex);                fprintf('.')                 if trialindex/10 == round(trialindex/10), disp(trialindex), end            data1 = bslcorr(data1, 1:100);         data2 = bslcorr(data2, 1:100);         % window data with cosine square window                window = cosinwin(30, size(data1,2), size(data1,1));                 data1 = data1 .* window;         data2 = data2 .* window;                 data_pad3d1 = repmat(data1, [1 1 size(wavelet,1)]);         data_pad3d2 = repmat(data2, [1 1 size(wavelet,1)]);             % transform data  to the frequency        data_trans1 = fft(data_pad3d1, NPointsNew, 2);        data_trans2 = fft(data_pad3d2, NPointsNew, 2);        thetaMATLABretrans1 = [];         thetaMATLABretrans2 = [];         ProdMat1= waveletMat3d .*(data_trans1);        ProdMat2= waveletMat3d .*(data_trans2);                thetaMATLABretrans1 = ifft(ProdMat1, NPointsNew, 2);        thetaMATLABretrans2 = ifft(ProdMat2, NPointsNew, 2);            WaPower1 = abs(thetaMATLABretrans1).* 10;         WaPower2 = abs(thetaMATLABretrans2).* 10;                   outmat3d1(:, :, trialindex) = squeeze(WaPower1(:, :, freqindex));          outmat3d2(:, :, trialindex) = squeeze(WaPower2(:, :, freqindex));                            end % loop over trials      eval(['save ' deblank(filemat1(fileindex,:)) '.singtr' num2str(freqindex) '.mat outmat3d1 -mat'])  eval(['save ' deblank(filemat2(fileindex,:)) '.singtr' num2str(freqindex) '.mat outmat3d2 -mat'])  end