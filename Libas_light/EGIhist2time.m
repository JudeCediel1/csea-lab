[HistFile, HistPath] = uigetfile('UBIES:AS_Exps:Bruno:brunobehav:*.Hist', 'select hist file');HistFilePath = [HistPath HistFile];[HistFile,HistPath,HistFilePath]=ReadFilePath(HistFilePath, '*.HIST',['Choose the HIST file:']);		fprintf('\n\n')        fprintf('Open file:\n')        fprintf(HistFilePath)        HistFid=fopen(HistFilePath,'r');				Tmp=fscanf(HistFid,'%s',1);	%Event		Tmp=fscanf(HistFid,'%s',1);	%History		StartTimeTest=fscanf(HistFid,'%s',1);		StartMsTest=StartTimeTest(19)-48;		StartMsTest=StartMsTest+(StartTimeTest(18)-48).*10;		StartMsTest=StartMsTest+(StartTimeTest(17)-48).*100;		StartMsTest=StartMsTest+(StartTimeTest(15)-48).*1000;		StartMsTest=StartMsTest+(StartTimeTest(14)-48).*10000;		StartMsTest=StartMsTest+(StartTimeTest(12)-48).*60000;		StartMsTest=StartMsTest+(StartTimeTest(11)-48).*600000;		StartMsTest=StartMsTest+(StartTimeTest(9)-48).*3600000;		StartMsTest=StartMsTest+(StartTimeTest(8)-48).*36000000;						TimeMsStart = StartMsTest;		MainMatlabVersion = eval('version');		SampRate = 500						Index=0;		Tmp='Bloedsinn';		fseek(HistFid,0,'bof');		while ~strcmp(Tmp,'Stimulus')				Tmp=fscanf(HistFid,'%s',1);			Index=Index+1;		end		Index=Index-3;		fseek(HistFid,0,'bof');		Tmp=fscanf(HistFid,'%s',Index);		Index=0;		Count=1;		Tell1=ftell(HistFid);		while Count==1             	 % inhalt Histfile einlesen			Index=Index+1;			[Tmp1,Count]=fscanf(HistFid,'%s',1);			[Tmp2,Count]=fscanf(HistFid,'%s',1);			[Tmp3,Count]=fscanf(HistFid,'%s',1);			[Tmp4,Count]=fscanf(HistFid,'%s',1);			[Tmp5,Count]=fscanf(HistFid,'%s',1);		end		NTrigEvents=Index-2;		NRowTrigDateTimeMat=19;        if MainMatlabVersion<5		  TrigDateTimeMat=zeros(NTrigEvents,NRowTrigDateTimeMat);		  TrigCodeMat=zeros(NTrigEvents,6);          NetEventNameMat=zeros(NNetEvents,6);        end		TrigBitMat=zeros(NTrigEvents,4);		fseek(HistFid,Tell1,'bof');        	NNetEventNames=0;		for TrigIndex=1:NTrigEvents			[Tmp1,Count]=fscanf(HistFid,'%s',1);			[Tmp2,Count]=fscanf(HistFid,'%s',1);			[Tmp3,Count]=fscanf(HistFid,'%s',1);			[Tmp4,Count]=fscanf(HistFid,'%s',1);			[Tmp5,Count]=fscanf(HistFid,'%s',1);            NewEventName=1;            for NetEventNameIndex=1:NNetEventNames               NetEventNameTmp=deblank(NetEventNameMat(NetEventNameIndex,:));              if strcmp(Tmp5,NetEventNameTmp)                 NewEventName=0;              end            end            if NewEventName              NNetEventNames=NNetEventNames+1;            end                      if MainMatlabVersion<5			    TrigDateTimeMat(TrigIndex,:)=Tmp1;			    TrigCodeMat(TrigIndex,1:length(Tmp5))=Tmp5;                 if NewEventName					if NNetEventNames==1						NetEventNameMat=Tmp5;                	else							[MoUse,NCol]=size(NetEventNameMat);					   	 NetEventNameMatTmp=zeros(NNetEventNames,max(length(Tmp5),NCol));												NetEventNameMatTmp(1:NNetEventNames-1,1:NCol)=NetEventNameMat;                   		NetEventNameMat(NNetEventNames,1:length(Tmp5))=Tmp5;					end				end            else               if TrigIndex==1                   TrigDateTimeMat=char(Tmp1);                   TrigCodeMat=char(Tmp5);               else                   TrigDateTimeMat=char(TrigDateTimeMat,Tmp1);                   TrigCodeMat=char(TrigCodeMat,Tmp5);               end               if NewEventName                   if NNetEventNames==1                        NetEventNameMat=char(Tmp5);                   else                        NetEventNameMat=char(NetEventNameMat,Tmp5);                   end                end            end        end		% Einschub andreas am 16.04.1999		% zweck: Korrektur der veraenderten Formate im Hist-file nach EGI-Fie-exporter		% i.e. : nach DINs geordnete trigger sollen wieder nach zeitpunkten geordnet werden		% TrigCodeMat und TrigDateTimeMat werden neu sortiert und neu reausgeschrieben			TmpmatTrigTimeAs = 	[TrigDateTimeMat TrigCodeMat];		TmpmatsortAs = sortrows(TmpmatTrigTimeAs);		TrigDateTimeMat = TmpmatsortAs(:,[1:19]);		TrigCodeMat = TmpmatsortAs(:,[20:25]);				%ende Einschub Andreas				TrigCodeTmp=deblank(TrigCodeMat(1,:));        for NetEventNameIndex=1:NNetEventNames                		 NetEventNameTmp=deblank(NetEventNameMat(NetEventNameIndex,:));		  	 if strcmp(TrigCodeTmp,NetEventNameTmp)			 	 TrigBitMat(1,NetEventNameIndex)=1;           		 end        end		TmpOld=0;		Index2=0;		for Index1=1:NTrigEvents			TmpNew=TrigDateTimeMat(Index1,19)-48;												TmpNew=TmpNew+(TrigDateTimeMat(Index1,18)-48).*10;						TmpNew=TmpNew+(TrigDateTimeMat(Index1,17)-48).*100;					TmpNew=TmpNew+(TrigDateTimeMat(Index1,15)-48).*1000;				TmpNew=TmpNew+(TrigDateTimeMat(Index1,14)-48).*10000;			TmpNew=TmpNew+(TrigDateTimeMat(Index1,12)-48).*60000;			TmpNew=TmpNew+(TrigDateTimeMat(Index1,11)-48).*600000;			TmpNew=TmpNew+(TrigDateTimeMat(Index1,9)-48).*3600000;			TmpNew=TmpNew+(TrigDateTimeMat(Index1,8)-48).*36000000;						if 	Index1==1 | (TmpNew-TmpOld>3);	%Da sich auch trigger eines Codes um einige ms unterscheiden koennen				Index2=Index2+1;				TimeMsVec(Index2)=TmpNew;			end            	TrigCodeTmp=deblank(TrigCodeMat(Index1,:));           	 	for NetEventNameIndex=1:NNetEventNames                		NetEventNameTmp=deblank(NetEventNameMat(NetEventNameIndex,:));		       		 if strcmp(TrigCodeTmp,NetEventNameTmp)			       		TrigBitMat(Index2,NetEventNameIndex)=1;               			 end           		 end			TmpOld = TmpNew; 		end				NTrig=Index2;						TimeMsVec=TimeMsVec-TimeMsStart.*ones(size(TimeMsVec)); 		TrialVec=ceil(TimeMsVec./(1000./SampRate));			%		TrigBitMat=TrigBitMat(1:NTrig, :);							fprintf('\n'); clc;		fprintf('Total number of trigger: %g ',NTrig);				CondVec=zeros(NTrig,1);		for Index=1:NTrig			if TrigBitMat(Index,:)==[0 0 0 0];				CondVec(Index)=0;			elseif TrigBitMat(Index,:)==[1 0 0 0];				CondVec(Index)=1;			elseif TrigBitMat(Index,:)==[0 1 0 0];				CondVec(Index)=2;			elseif TrigBitMat(Index,:)==[1 1 0 0];				CondVec(Index)=3;			elseif TrigBitMat(Index,:)==[0 0 1 0];				CondVec(Index)=4;			elseif TrigBitMat(Index,:)==[1 0 1 0];				CondVec(Index)=5;			elseif TrigBitMat(Index,:)==[0 1 1 0];					CondVec(Index)=6;			elseif TrigBitMat(Index,:)==[1 1 1 0];					CondVec(Index)=7;			elseif TrigBitMat(Index,:)==[0 0 0 1];					CondVec(Index)=8;			elseif TrigBitMat(Index,:)==[1 0 0 1];					CondVec(Index)=9;			elseif TrigBitMat(Index,:)==[0 1 0 1];					CondVec(Index)=10;			elseif TrigBitMat(Index,:)==[1 1 0 1];					CondVec(Index)=11;			elseif TrigBitMat(Index,:)==[0 0 1 1];					CondVec(Index)=12;			elseif TrigBitMat(Index,:)==[1 0 1 1];					CondVec(Index)=13;			elseif TrigBitMat(Index,:)==[0 1 1 1];					CondVec(Index)=14;			elseif TrigBitMat(Index,:)==[1 1 1 1];					CondVec(Index)=15;			end		end			%	berechne latenzen in millisekunden	%      aus Latmat	%      und differenzen zwischen Din1 und Din2 in neuen vector DifflatVec: mit spalten latenzdin1 latenzdin2 difflatenz					msecLatMat = [];	for event = 1 : length(TmpmatsortAs(:,1))		msec_h = eval(TmpmatsortAs(event,[8:9])) * 3600000;				% 		msec_m = msec_h + eval(TmpmatsortAs(event,[11:12])) * 60000;		msec_s = msec_m + eval(TmpmatsortAs(event,[14:15])) * 1000;		msecLatMat(event,:) = msec_s +eval(TmpmatsortAs(event,[17:19]));		end	DifflatVec = []		% Berechne latenzen:		for event = 1 : length(TmpmatsortAs(:,1))-2		if TmpmatsortAs(event,24) == '1' & TmpmatsortAs(event+1,24) == '2' & TmpmatsortAs(event+2,24)== '2' ;			DifflatVec = [DifflatVec msecLatMat(event,:)-msecLatMat(event+1,:) msecLatMat(event,:)-msecLatMat(event+2,:)];		elseif  TmpmatsortAs(event,24) == '1' & TmpmatsortAs(event+1,24) == '2' & TmpmatsortAs(event+2,24)== '1' ;			DifflatVec = [DifflatVec msecLatMat(event,:)-msecLatMat(event+1,:) 0];		elseif  TmpmatsortAs(event,24) == '1' & TmpmatsortAs(event+1,24) == '1' 			DifflatVec = [DifflatVec 0 0];		end		end					DifflatVec = DifflatVec' .*-1;		fname = [HistFile(1:7) 'diff']		eval(['save UBIES:AS_Exps:Bruno:brunobehav:' fname ' DifflatVec -ascii'])		fclose(HistFid)	clear																				