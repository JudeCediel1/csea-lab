% topottest_perm% determines t-values for topographies for one timepoint% computes t_max95 distribution following maris/blair&karnisky% --> format of inmats: subjects, electrodesfunction [critTmax, critTmin, tmax_vec, tmin_vec] = topottest_perm(mat1, mat2, betwflag)mat = [mat1;mat2];ordermat = [1:size(mat)./2; size(mat)./2+1:size(mat)]';indexmat = zeros(size(ordermat)); if betwflag == 1; for draw = 1:8000;             permindices=randperm(size(mat1,1).*2);        for elec = 1 : size(mat1, 2);	[tValvector(elec)] = Ttest(mat(permindices(1:size(mat1,1)), elec), mat(permindices(size(mat1,1)+1:size(mat,1)), elec));    end    tValvector_sort = sort(tValvector);    tmax_vec(draw) = tValvector_sort(floor(length(tValvector_sort).*0.95));    tmin_vec(draw) = tValvector_sort(floor(length(tValvector_sort).*0.05));        if draw/100 == round(draw/100), fprintf('.'), end     end else    for draw = 1:8000;             for index2 = 1:size(mat1,1)        indexmat(index2,:) = ordermat(index2,randperm(2));    end    permindices = [indexmat(:,1); indexmat(:,2)];     for elec = 1 : size(mat1, 2);	[tValvector(elec)] = ttestwithin(mat(permindices(1:size(mat1,1)), elec), mat(permindices(size(mat1,1)+1:size(mat,1)), elec));    end        tValvector_sort = sort(tValvector);    tmax_vec(draw) = tValvector_sort(floor(length(tValvector_sort).*0.95));    tmin_vec(draw) = tValvector_sort(floor(length(tValvector_sort).*0.05));        if draw/100 == round(draw/100), fprintf('.'), end endendthist = [tmax_vec tmin_vec];hist(tmax_vec,100)figurehist(tmin_vec,100)figurehist(thist,100)[bin,tval] = hist(thist,500);critbin = sum(bin).*.975cumbins = cumsum(bin);indices = find(cumbins > critbin);index = min(indices);critTmax = tval(index)[bin,tval] = hist(thist,500);critbin = sum(bin).*0.025cumbins = cumsum(bin);indices = find(cumbins < critbin);index = max(indices);critTmin = tval(index)save t_max.dat tmax_vec -asciisave t_min.dat tmin_vec -ascii