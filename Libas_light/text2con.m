%% Procedure um *.TXT Protokolle% aus dem Snodgrass Experiment% in *.CON files fuer M. Junghoefers% AvgAppTimeBatch umzuwandeln%% Parameter sind vom Benutzer im% Source Code einzutragen%% ! Da es sich um PC-files handelt muss% ! die Schriftart vorher auf 'Times'% ! umgestellt werden.%% August 1998 - T. Gruber%% Parameter %%%% vom User einzutragen %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Name des Protokollfilestxt_file = ['UBIES:']% Nummern der Bilder, die schon vorher erkannt wurden% 0 eintragen, wenn OKbsve = [59 62];% Namen der neu erzeugten CON filescon_file_bl1_neu  = ['Voyager:Users:Eva:vp10_bl1_neu.CON']con_file_bl2_neu  = ['Voyager:Users:Eva:vp10_bl2_neu.CON']con_file_bl3_neu1 = ['Voyager:Users:Eva:vp10_bl3_neu1.CON']con_file_bl3_neu2 = ['Voyager:Users:Eva:vp10_bl3_neu2.CON']con_file_bl3_neu3 = ['Voyager:Users:Eva:vp10_bl3_neu3.CON']%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%disp('');disp('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');disp('!!! Stelle sicher, dass im *.TXT file, die Schrift auf  !!!');disp('!!! TIMES geaendert wurde                               !!!');disp('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');disp('');% Programm[fid, msg] = fopen(txt_file, 'r' );if fid == -1  error(msg);end;% Block 1 einlesen% dabei werden Bilder, die schon vorher erkannt wurden,% als Bedingung '5' behandeltbed1 = [];line1 = fgetl(fid)line2 = fgetl(fid)line3 = fgetl(fid)line4 = fgetl(fid)line5 = fgetl(fid)for j = 1 : 5  line6 = fgetl(fid);  for i = 1 : 34    wert = fgetl(fid);    wert = str2num(wert);    if wert <= 51 wert_code = 1;end;    if wert >  51 wert_code = 2;end;    if ~isempty(find(bsve==wert)) wert_code = 5;end;    bed1 = [bed1 ; wert_code];  endend;% Block 2 einlesen% dabei werden Bilder die schon vorher erkannt wurden% als Bedingung '5' behandeltbed2 = [];bsve = bsve-34;line1 = fgetl(fid)line2 = fgetl(fid)line3 = fgetl(fid)for j = 1 : 5  line6 = fgetl(fid);  for i = 1 : 17    wert = fgetl(fid);    wert = str2num(wert);    wert_code = 1;    if ~isempty(find(bsve==wert)) wert_code = 5;end;    bed2 = [bed2 ; wert_code];  endend;bsve = bsve+34;% Block 3 einlesen% dabei werden Bilder die schon vorher erkannt wurden% als Bedingung '5' behandelt% ansonsten werden je nach Eingabe der Vp von 0 bis 3% die Bedingungen 1 bis 4 verteilt% Dies gilt fuer Matrix bed3% In Matrix bed4 stehen wie in Block1 die Werte 1 und 2 und 5bed3 = [];bed4 = [];bed6 = []; % wird fuer Block 4 verwendetline1 = fgetl(fid)line2 = fgetl(fid)line3 = fgetl(fid)for j = 1 : 5  line6 = fgetl(fid);  for i = 1 : 34    wert = fgetl(fid);    wert1 = str2num(wert(1:2));    bed6 = [bed6; wert1]; % wird erst fuer block4 verwendet    wert2 = str2num(wert(3:4)) + 1;    if wert1 <= 51 wert_code1 = 1;end;    if wert1 >  51 wert_code1 = 2;end;    wert_code2 = wert2;    if ~isempty(find(bsve==wert1)) wert_code1 = 5;wert_code2 = 5;end;    bed3 = [bed3 ; wert_code2];    bed4 = [bed4 ; wert_code1];  endend;% Nun werden im Block 3 noch Bilder, die in Block4 erkannt wurden% und die nicht erkannt wurden getrennt% Dabei gilt folgende Codierung fuer bed5% 1 : erkannt und komplett gesehen% 2 : erkannt aber nie komplett gesehen% 3 : nicht erkannt aber komplett gesehen% 4 : nicht erkannt und nicht komplett gesehen% 5 : s.o. (schon vorher erkannt)bed5 = [];bsve = bsve - 34;line1 = fgetl(fid)line2 = fgetl(fid)line3 = fgetl(fid)for i = 1 : 34  wert = fgetl(fid);  wert = wert(size(wert,2)-2);  if ((strcmp(wert,['r']) == 1) & (i <= 17)) wert_code = 1;end;  if ((strcmp(wert,['r']) == 1) & (i >  17)) wert_code = 2;end;  if ((strcmp(wert,['f']) == 1) & (i <= 17)) wert_code = 3;end;  if ((strcmp(wert,['f']) == 1) & (i >  17)) wert_code = 4;end;  if ~isempty(find(bsve==i)) wert_code = 5;end;  bed5 = [bed5 ; wert_code];end;fclose(fid);% nun muss bed5 noch auf den 3ten block uebertragen werden daraus% entsteht die neue bed6bed7 = [];for i = 1 : 170  bed7 = [bed7; bed5(bed6(i)-34)];end;% Abspeichern von bed1,bed2,bed3,bed4,bed7 als CON Files% bed1 : block 1 mit markierten(5) vorher erkannten Bildern. Fragmentierte% vs unf.% bed2 : block 2 mit markierten(5) vorher erkannten Bildern% bed3 : Eingaben der Vp bzw Marker 5% bed4 : Vgl. bed1% bed7 : erkannte und nicht erkannte (Marker1-5)% BED1% Neues CON file oeffnencon_file_bl1_neu[fid3, msg] = fopen(con_file_bl1_neu, 'wt' );if fid3 == -1  error(msg);end;fprintf(fid3,'%s\n',' 1	170');for i = 1 : 170  fprintf(fid3,'%s\n',num2str(bed1(i),0));end;fclose(fid3);% BED2% Neues CON file oeffnencon_file_bl2_neu[fid3, msg] = fopen(con_file_bl2_neu, 'wt' );if fid3 == -1  error(msg);end;fprintf(fid3,'%s\n',' 1	85');for i = 1 : 85  fprintf(fid3,'%s\n',num2str(bed2(i),0));end;fclose(fid3);% BED3% Neues CON file oeffnencon_file_bl3_neu1[fid3, msg] = fopen(con_file_bl3_neu1, 'wt' );if fid3 == -1  error(msg);end;fprintf(fid3,'%s\n',' 1	170');for i = 1 : 170  fprintf(fid3,'%s\n',num2str(bed3(i),0));end;fclose(fid3);% BED4% Neues CON file oeffnencon_file_bl3_neu2[fid3, msg] = fopen(con_file_bl3_neu2, 'wt' );if fid3 == -1  error(msg);end;fprintf(fid3,'%s\n',' 1	170');for i = 1 : 170  fprintf(fid3,'%s\n',num2str(bed4(i),0));end;fclose(fid3);% BED7% Neues CON file oeffnencon_file_bl3_neu3[fid3, msg] = fopen(con_file_bl3_neu3, 'wt' );if fid3 == -1  error(msg);end;fprintf(fid3,'%s\n',' 1	170');for i = 1 : 170  fprintf(fid3,'%s\n',num2str(bed7(i),0));end;fclose(fid3);